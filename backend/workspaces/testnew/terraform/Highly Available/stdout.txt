
[0m[1mInitializing the backend...[0m
[0m[1mInitializing modules...[0m
- instances in modules\instances
- networking in modules\networking
- security in modules\security

[0m[1mInitializing provider plugins...[0m
- Finding latest version of hashicorp/aws...
- Installing hashicorp/aws v5.45.0...
- Installed hashicorp/aws v5.45.0 (signed by HashiCorp)

Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.instances.aws_autoscaling_group.wordpress_asg[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "wordpress_asg" {
      [32m+[0m[0m arn                              = (known after apply)
      [32m+[0m[0m availability_zones               = (known after apply)
      [32m+[0m[0m default_cooldown                 = (known after apply)
      [32m+[0m[0m desired_capacity                 = 3
      [32m+[0m[0m force_delete                     = false
      [32m+[0m[0m force_delete_warm_pool           = false
      [32m+[0m[0m health_check_grace_period        = 300
      [32m+[0m[0m health_check_type                = "ELB"
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m ignore_failed_scaling_activities = false
      [32m+[0m[0m launch_configuration             = (known after apply)
      [32m+[0m[0m load_balancers                   = (known after apply)
      [32m+[0m[0m max_size                         = 5
      [32m+[0m[0m metrics_granularity              = "1Minute"
      [32m+[0m[0m min_size                         = 3
      [32m+[0m[0m name                             = (known after apply)
      [32m+[0m[0m name_prefix                      = (known after apply)
      [32m+[0m[0m predicted_capacity               = (known after apply)
      [32m+[0m[0m protect_from_scale_in            = false
      [32m+[0m[0m service_linked_role_arn          = (known after apply)
      [32m+[0m[0m target_group_arns                = (known after apply)
      [32m+[0m[0m vpc_zone_identifier              = (known after apply)
      [32m+[0m[0m wait_for_capacity_timeout        = "10m"
      [32m+[0m[0m warm_pool_size                   = (known after apply)

      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "Name"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "Wordpress App - testnew"
        }
    }

[1m  # module.instances.aws_autoscaling_policy.scale_in_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "scale_in_policy" {
      [32m+[0m[0m adjustment_type         = "ChangeInCapacity"
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m autoscaling_group_name  = (known after apply)
      [32m+[0m[0m cooldown                = 120
      [32m+[0m[0m enabled                 = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m metric_aggregation_type = (known after apply)
      [32m+[0m[0m name                    = "scale-in-policy"
      [32m+[0m[0m policy_type             = "SimpleScaling"
      [32m+[0m[0m scaling_adjustment      = -1
    }

[1m  # module.instances.aws_autoscaling_policy.scale_out_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "scale_out_policy" {
      [32m+[0m[0m adjustment_type         = "ChangeInCapacity"
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m autoscaling_group_name  = (known after apply)
      [32m+[0m[0m cooldown                = 120
      [32m+[0m[0m enabled                 = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m metric_aggregation_type = (known after apply)
      [32m+[0m[0m name                    = "scale-out-policy"
      [32m+[0m[0m policy_type             = "SimpleScaling"
      [32m+[0m[0m scaling_adjustment      = 1
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_in[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_in" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_actions                         = (known after apply)
      [32m+[0m[0m alarm_description                     = "Monitors Request Count for Wordpress ASG"
      [32m+[0m[0m alarm_name                            = "wordpress_scale_down"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "LessThanOrEqualToThreshold"
      [32m+[0m[0m dimensions                            = (known after apply)
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 2
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "RequestCountPerTarget"
      [32m+[0m[0m namespace                             = "AWS/EC2"
      [32m+[0m[0m period                                = 10
      [32m+[0m[0m statistic                             = "Sum"
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m threshold                             = 5
      [32m+[0m[0m treat_missing_data                    = "missing"
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_out[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_out" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_actions                         = (known after apply)
      [32m+[0m[0m alarm_description                     = "Monitors Request Count for Wordpress ASG"
      [32m+[0m[0m alarm_name                            = "wordpress_scale_up"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "GreaterThanOrEqualToThreshold"
      [32m+[0m[0m dimensions                            = (known after apply)
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 2
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "RequestCountPerTarget"
      [32m+[0m[0m namespace                             = "AWS/EC2"
      [32m+[0m[0m period                                = 10
      [32m+[0m[0m statistic                             = "Sum"
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m threshold                             = 10
      [32m+[0m[0m treat_missing_data                    = "missing"
    }

[1m  # module.instances.aws_db_instance.wordpress_db[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "wordpress_db" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 20
      [32m+[0m[0m apply_immediately                     = false
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m backup_retention_period               = (known after apply)
      [32m+[0m[0m backup_target                         = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_name                               = "wordpress"
      [32m+[0m[0m db_subnet_group_name                  = "db subnet group - testnew"
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m domain_fqdn                           = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "mariadb"
      [32m+[0m[0m engine_version                        = "10.11.5"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "wordpress-testnew"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t3.micro"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = true
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = (known after apply)
      [32m+[0m[0m password                              = (sensitive value)
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m publicly_accessible                   = false
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = "gp3"
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Name" = "WordPress DB - testnew"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Name" = "WordPress DB - testnew"
        }
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "wordpressuser"
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # module.instances.aws_db_subnet_group.db-subnet[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "db-subnet" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Managed by Terraform"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "db subnet group - testnew"
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags_all                = (known after apply)
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.instances.aws_efs_backup_policy.policy[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_backup_policy" "policy" {
      [32m+[0m[0m file_system_id = (known after apply)
      [32m+[0m[0m id             = (known after apply)

      [32m+[0m[0m backup_policy {
          [32m+[0m[0m status = "DISABLED"
        }
    }

[1m  # module.instances.aws_efs_file_system.wordpress_efs[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_file_system" "wordpress_efs" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m availability_zone_id    = (known after apply)
      [32m+[0m[0m availability_zone_name  = (known after apply)
      [32m+[0m[0m creation_token          = "wordpress-efs-testnew"
      [32m+[0m[0m dns_name                = (known after apply)
      [32m+[0m[0m encrypted               = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kms_key_id              = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m number_of_mount_targets = (known after apply)
      [32m+[0m[0m owner_id                = (known after apply)
      [32m+[0m[0m performance_mode        = "generalPurpose"
      [32m+[0m[0m size_in_bytes           = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Name" = "WordPressEFS-testnew"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Name" = "WordPressEFS-testnew"
        }
      [32m+[0m[0m throughput_mode         = "bursting"
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[0][0m will be created
[0m  [32m+[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [32m+[0m[0m availability_zone_id   = (known after apply)
      [32m+[0m[0m availability_zone_name = (known after apply)
      [32m+[0m[0m dns_name               = (known after apply)
      [32m+[0m[0m file_system_arn        = (known after apply)
      [32m+[0m[0m file_system_id         = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_address             = (known after apply)
      [32m+[0m[0m mount_target_dns_name  = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m security_groups        = (known after apply)
      [32m+[0m[0m subnet_id              = (known after apply)
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[1][0m will be created
[0m  [32m+[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [32m+[0m[0m availability_zone_id   = (known after apply)
      [32m+[0m[0m availability_zone_name = (known after apply)
      [32m+[0m[0m dns_name               = (known after apply)
      [32m+[0m[0m file_system_arn        = (known after apply)
      [32m+[0m[0m file_system_id         = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_address             = (known after apply)
      [32m+[0m[0m mount_target_dns_name  = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m security_groups        = (known after apply)
      [32m+[0m[0m subnet_id              = (known after apply)
    }

[1m  # module.instances.aws_instance.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion" {
      [32m+[0m[0m ami                                  = "ami-0df5c32c4d4710802"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "bastion-key"
      [32m+[0m[0m monitoring                           = true
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Bastion Instance - testnew"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Bastion Instance - testnew"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.instances.aws_launch_configuration.wordpress_lc[0m will be created
[0m  [32m+[0m[0m resource "aws_launch_configuration" "wordpress_lc" {
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m associate_public_ip_address = true
      [32m+[0m[0m ebs_optimized               = (known after apply)
      [32m+[0m[0m enable_monitoring           = true
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m image_id                    = "ami-0df5c32c4d4710802"
      [32m+[0m[0m instance_type               = "t2.micro"
      [32m+[0m[0m key_name                    = (known after apply)
      [32m+[0m[0m name                        = (known after apply)
      [32m+[0m[0m name_prefix                 = (known after apply)
      [32m+[0m[0m security_groups             = (known after apply)
      [32m+[0m[0m user_data                   = (known after apply)
    }

[1m  # module.instances.aws_lb.wordpress_lb[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "wordpress_lb" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = false
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = false
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = "wordpress-lb-testnew"
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = (known after apply)
      [32m+[0m[0m tags                                                         = {
          [32m+[0m[0m "Name" = "Application Load Balancer - testnew"
        }
      [32m+[0m[0m tags_all                                                     = {
          [32m+[0m[0m "Name" = "Application Load Balancer - testnew"
        }
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)
    }

[1m  # module.instances.aws_lb_listener.wordpress_listener[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "wordpress_listener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Name" = "Listener for LB - testnew"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Name" = "Listener for LB - testnew"
        }

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.instances.aws_lb_target_group.wordpress_tg[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "wordpress_tg" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "wordpress-tg-testnew"
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "Target Group - testnew"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "Target Group - testnew"
        }
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 25
          [32m+[0m[0m matcher             = "200,301"
          [32m+[0m[0m path                = "/wordpress"
          [32m+[0m[0m port                = "80"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 20
          [32m+[0m[0m unhealthy_threshold = 2
        }
    }

[1m  # module.networking.aws_eip.nat_eip[0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat_eip" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.networking.aws_internet_gateway.gw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "Internet Gateway"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "Internet Gateway"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.networking.aws_nat_gateway.nat_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat_gateway" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "NAT Gateway"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "NAT Gateway"
        }
    }

[1m  # module.networking.aws_route_table.private_route[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private_route" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "Private Route Table"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "Private Route Table"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.networking.aws_route_table.public_route[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public_route" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "Public Route Table"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "Public Route Table"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.private_subnet_1_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private_subnet_1_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.private_subnet_2_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private_subnet_2_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.private_subnet_3_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private_subnet_3_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.public_subnet_1_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_subnet_1_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.public_subnet_2_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_subnet_2_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_subnet.private_subnet_1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Private Subnet 1 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Private Subnet 1 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.private_subnet_2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Private Subnet 2 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Private Subnet 2 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.private_subnet_3[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_3" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.5.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Private Subnet 3 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Private Subnet 3 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.public_subnet_1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet_1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Public Subnet 1 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Public Subnet 1 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.public_subnet_2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet_2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Public Subnet 2 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Public Subnet 2 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "testnew-VPC"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "testnew-VPC"
        }
    }

[1m  # module.security.aws_security_group.bastion_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bastion_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.ec2_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "ec2_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "EC2 Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "EC2 Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.efs_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "efs_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 2049
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 2049
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "EFS Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "EFS Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.lb_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "lb_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "LB Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "LB Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.rds_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "rds_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 3306
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 3306
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 5432
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 5432
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1mPlan:[0m 37 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.instances.aws_autoscaling_group.wordpress_asg[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "wordpress_asg" {
      [32m+[0m[0m arn                              = (known after apply)
      [32m+[0m[0m availability_zones               = (known after apply)
      [32m+[0m[0m default_cooldown                 = (known after apply)
      [32m+[0m[0m desired_capacity                 = 3
      [32m+[0m[0m force_delete                     = false
      [32m+[0m[0m force_delete_warm_pool           = false
      [32m+[0m[0m health_check_grace_period        = 300
      [32m+[0m[0m health_check_type                = "ELB"
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m ignore_failed_scaling_activities = false
      [32m+[0m[0m launch_configuration             = (known after apply)
      [32m+[0m[0m load_balancers                   = (known after apply)
      [32m+[0m[0m max_size                         = 5
      [32m+[0m[0m metrics_granularity              = "1Minute"
      [32m+[0m[0m min_size                         = 3
      [32m+[0m[0m name                             = (known after apply)
      [32m+[0m[0m name_prefix                      = (known after apply)
      [32m+[0m[0m predicted_capacity               = (known after apply)
      [32m+[0m[0m protect_from_scale_in            = false
      [32m+[0m[0m service_linked_role_arn          = (known after apply)
      [32m+[0m[0m target_group_arns                = (known after apply)
      [32m+[0m[0m vpc_zone_identifier              = (known after apply)
      [32m+[0m[0m wait_for_capacity_timeout        = "10m"
      [32m+[0m[0m warm_pool_size                   = (known after apply)

      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "Name"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "Wordpress App - testnew"
        }
    }

[1m  # module.instances.aws_autoscaling_policy.scale_in_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "scale_in_policy" {
      [32m+[0m[0m adjustment_type         = "ChangeInCapacity"
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m autoscaling_group_name  = (known after apply)
      [32m+[0m[0m cooldown                = 120
      [32m+[0m[0m enabled                 = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m metric_aggregation_type = (known after apply)
      [32m+[0m[0m name                    = "scale-in-policy"
      [32m+[0m[0m policy_type             = "SimpleScaling"
      [32m+[0m[0m scaling_adjustment      = -1
    }

[1m  # module.instances.aws_autoscaling_policy.scale_out_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "scale_out_policy" {
      [32m+[0m[0m adjustment_type         = "ChangeInCapacity"
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m autoscaling_group_name  = (known after apply)
      [32m+[0m[0m cooldown                = 120
      [32m+[0m[0m enabled                 = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m metric_aggregation_type = (known after apply)
      [32m+[0m[0m name                    = "scale-out-policy"
      [32m+[0m[0m policy_type             = "SimpleScaling"
      [32m+[0m[0m scaling_adjustment      = 1
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_in[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_in" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_actions                         = (known after apply)
      [32m+[0m[0m alarm_description                     = "Monitors Request Count for Wordpress ASG"
      [32m+[0m[0m alarm_name                            = "wordpress_scale_down"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "LessThanOrEqualToThreshold"
      [32m+[0m[0m dimensions                            = (known after apply)
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 2
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "RequestCountPerTarget"
      [32m+[0m[0m namespace                             = "AWS/EC2"
      [32m+[0m[0m period                                = 10
      [32m+[0m[0m statistic                             = "Sum"
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m threshold                             = 5
      [32m+[0m[0m treat_missing_data                    = "missing"
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_out[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_out" {
      [32m+[0m[0m actions_enabled                       = true
      [32m+[0m[0m alarm_actions                         = (known after apply)
      [32m+[0m[0m alarm_description                     = "Monitors Request Count for Wordpress ASG"
      [32m+[0m[0m alarm_name                            = "wordpress_scale_up"
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m comparison_operator                   = "GreaterThanOrEqualToThreshold"
      [32m+[0m[0m dimensions                            = (known after apply)
      [32m+[0m[0m evaluate_low_sample_count_percentiles = (known after apply)
      [32m+[0m[0m evaluation_periods                    = 2
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m metric_name                           = "RequestCountPerTarget"
      [32m+[0m[0m namespace                             = "AWS/EC2"
      [32m+[0m[0m period                                = 10
      [32m+[0m[0m statistic                             = "Sum"
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m threshold                             = 10
      [32m+[0m[0m treat_missing_data                    = "missing"
    }

[1m  # module.instances.aws_db_instance.wordpress_db[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "wordpress_db" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 20
      [32m+[0m[0m apply_immediately                     = false
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m backup_retention_period               = (known after apply)
      [32m+[0m[0m backup_target                         = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_name                               = "wordpress"
      [32m+[0m[0m db_subnet_group_name                  = "db subnet group - testnew"
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m domain_fqdn                           = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "mariadb"
      [32m+[0m[0m engine_version                        = "10.11.5"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "wordpress-testnew"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t3.micro"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = true
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = (known after apply)
      [32m+[0m[0m password                              = (sensitive value)
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m publicly_accessible                   = false
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = "gp3"
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Name" = "WordPress DB - testnew"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Name" = "WordPress DB - testnew"
        }
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "wordpressuser"
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # module.instances.aws_db_subnet_group.db-subnet[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "db-subnet" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Managed by Terraform"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "db subnet group - testnew"
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags_all                = (known after apply)
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.instances.aws_efs_backup_policy.policy[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_backup_policy" "policy" {
      [32m+[0m[0m file_system_id = (known after apply)
      [32m+[0m[0m id             = (known after apply)

      [32m+[0m[0m backup_policy {
          [32m+[0m[0m status = "DISABLED"
        }
    }

[1m  # module.instances.aws_efs_file_system.wordpress_efs[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_file_system" "wordpress_efs" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m availability_zone_id    = (known after apply)
      [32m+[0m[0m availability_zone_name  = (known after apply)
      [32m+[0m[0m creation_token          = "wordpress-efs-testnew"
      [32m+[0m[0m dns_name                = (known after apply)
      [32m+[0m[0m encrypted               = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kms_key_id              = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m number_of_mount_targets = (known after apply)
      [32m+[0m[0m owner_id                = (known after apply)
      [32m+[0m[0m performance_mode        = "generalPurpose"
      [32m+[0m[0m size_in_bytes           = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Name" = "WordPressEFS-testnew"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Name" = "WordPressEFS-testnew"
        }
      [32m+[0m[0m throughput_mode         = "bursting"
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[0][0m will be created
[0m  [32m+[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [32m+[0m[0m availability_zone_id   = (known after apply)
      [32m+[0m[0m availability_zone_name = (known after apply)
      [32m+[0m[0m dns_name               = (known after apply)
      [32m+[0m[0m file_system_arn        = (known after apply)
      [32m+[0m[0m file_system_id         = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_address             = (known after apply)
      [32m+[0m[0m mount_target_dns_name  = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m security_groups        = (known after apply)
      [32m+[0m[0m subnet_id              = (known after apply)
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[1][0m will be created
[0m  [32m+[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [32m+[0m[0m availability_zone_id   = (known after apply)
      [32m+[0m[0m availability_zone_name = (known after apply)
      [32m+[0m[0m dns_name               = (known after apply)
      [32m+[0m[0m file_system_arn        = (known after apply)
      [32m+[0m[0m file_system_id         = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_address             = (known after apply)
      [32m+[0m[0m mount_target_dns_name  = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m security_groups        = (known after apply)
      [32m+[0m[0m subnet_id              = (known after apply)
    }

[1m  # module.instances.aws_instance.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion" {
      [32m+[0m[0m ami                                  = "ami-0df5c32c4d4710802"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "bastion-key"
      [32m+[0m[0m monitoring                           = true
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Bastion Instance - testnew"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Bastion Instance - testnew"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.instances.aws_launch_configuration.wordpress_lc[0m will be created
[0m  [32m+[0m[0m resource "aws_launch_configuration" "wordpress_lc" {
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m associate_public_ip_address = true
      [32m+[0m[0m ebs_optimized               = (known after apply)
      [32m+[0m[0m enable_monitoring           = true
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m image_id                    = "ami-0df5c32c4d4710802"
      [32m+[0m[0m instance_type               = "t2.micro"
      [32m+[0m[0m key_name                    = (known after apply)
      [32m+[0m[0m name                        = (known after apply)
      [32m+[0m[0m name_prefix                 = (known after apply)
      [32m+[0m[0m security_groups             = (known after apply)
      [32m+[0m[0m user_data                   = (known after apply)
    }

[1m  # module.instances.aws_lb.wordpress_lb[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "wordpress_lb" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = false
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = false
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = "wordpress-lb-testnew"
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = (known after apply)
      [32m+[0m[0m tags                                                         = {
          [32m+[0m[0m "Name" = "Application Load Balancer - testnew"
        }
      [32m+[0m[0m tags_all                                                     = {
          [32m+[0m[0m "Name" = "Application Load Balancer - testnew"
        }
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)
    }

[1m  # module.instances.aws_lb_listener.wordpress_listener[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "wordpress_listener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Name" = "Listener for LB - testnew"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Name" = "Listener for LB - testnew"
        }

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.instances.aws_lb_target_group.wordpress_tg[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "wordpress_tg" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "wordpress-tg-testnew"
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "Target Group - testnew"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "Target Group - testnew"
        }
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 25
          [32m+[0m[0m matcher             = "200,301"
          [32m+[0m[0m path                = "/wordpress"
          [32m+[0m[0m port                = "80"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 20
          [32m+[0m[0m unhealthy_threshold = 2
        }
    }

[1m  # module.networking.aws_eip.nat_eip[0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat_eip" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.networking.aws_internet_gateway.gw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "gw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "Internet Gateway"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "Internet Gateway"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.networking.aws_nat_gateway.nat_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat_gateway" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "NAT Gateway"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "NAT Gateway"
        }
    }

[1m  # module.networking.aws_route_table.private_route[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private_route" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "Private Route Table"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "Private Route Table"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.networking.aws_route_table.public_route[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public_route" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "Public Route Table"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "Public Route Table"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.private_subnet_1_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private_subnet_1_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.private_subnet_2_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private_subnet_2_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.private_subnet_3_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private_subnet_3_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.public_subnet_1_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_subnet_1_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_route_table_association.public_subnet_2_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_subnet_2_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.networking.aws_subnet.private_subnet_1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Private Subnet 1 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Private Subnet 1 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.private_subnet_2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Private Subnet 2 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Private Subnet 2 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.private_subnet_3[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet_3" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.5.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Private Subnet 3 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Private Subnet 3 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.public_subnet_1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet_1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Public Subnet 1 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Public Subnet 1 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_subnet.public_subnet_2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet_2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-southeast-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "Public Subnet 2 - testnew"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "Public Subnet 2 - testnew"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.networking.aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "testnew-VPC"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "testnew-VPC"
        }
    }

[1m  # module.security.aws_security_group.bastion_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bastion_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.ec2_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "ec2_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "EC2 Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "EC2 Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.efs_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "efs_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 2049
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 2049
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "EFS Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "EFS Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.lb_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "lb_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "LB Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "LB Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security.aws_security_group.rds_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "rds_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 3306
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 3306
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 5432
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 5432
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "RDS Security Group - testnew"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1mPlan:[0m 37 to add, 0 to change, 0 to destroy.
[0m[0m[1mmodule.networking.aws_vpc.main: Creating...[0m[0m
[0m[1mmodule.instances.aws_efs_file_system.wordpress_efs: Creating...[0m[0m
[0m[1mmodule.networking.aws_eip.nat_eip: Creating...[0m[0m
[0m[1mmodule.networking.aws_eip.nat_eip: Creation complete after 1s [id=eipalloc-0c0b778fe697b8c27][0m
[0m[1mmodule.instances.aws_efs_file_system.wordpress_efs: Creation complete after 6s [id=fs-048996c9210948b78][0m
[0m[1mmodule.instances.aws_efs_backup_policy.policy: Creating...[0m[0m
[0m[1mmodule.instances.aws_efs_backup_policy.policy: Creation complete after 1s [id=fs-048996c9210948b78][0m
[0m[1mmodule.networking.aws_vpc.main: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.networking.aws_vpc.main: Creation complete after 12s [id=vpc-020ae876256aed30a][0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Creating...[0m[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_2: Creating...[0m[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Creating...[0m[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_1: Creating...[0m[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_3: Creating...[0m[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_2: Creating...[0m[0m
[0m[1mmodule.security.aws_security_group.lb_sg: Creating...[0m[0m
[0m[1mmodule.security.aws_security_group.bastion_sg: Creating...[0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Creation complete after 0s [id=igw-03f02111f9c0594be][0m
[0m[1mmodule.networking.aws_route_table.public_route: Creating...[0m[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_2: Creation complete after 0s [id=subnet-032b9e24f96ee2ffb][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_3: Creation complete after 0s [id=subnet-0ed054c4ecdc2ae29][0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Creation complete after 0s [id=subnet-053f4b13f4d145ce5][0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Creating...[0m[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_1: Creation complete after 0s [id=subnet-0744cbc0e0a099eb1][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_2: Creation complete after 0s [id=subnet-00293d745b25416ec][0m
[0m[1mmodule.instances.aws_db_subnet_group.db-subnet: Creating...[0m[0m
[0m[1mmodule.networking.aws_route_table.public_route: Creation complete after 1s [id=rtb-0afab117c26a63c55][0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_2_association: Creating...[0m[0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_1_association: Creating...[0m[0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_1_association: Creation complete after 1s [id=rtbassoc-0586c4e54e7118c8b][0m
[0m[1mmodule.instances.aws_db_subnet_group.db-subnet: Creation complete after 2s [id=db subnet group - testnew][0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_2_association: Creation complete after 1s [id=rtbassoc-068f4c37fef3c3aca][0m
[0m[1mmodule.security.aws_security_group.lb_sg: Creation complete after 2s [id=sg-0fea3842e48e1897d][0m
[0m[1mmodule.security.aws_security_group.bastion_sg: Creation complete after 2s [id=sg-096365d38e08173e9][0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Creating...[0m[0m
[0m[1mmodule.security.aws_security_group.ec2_sg: Creating...[0m[0m
[0m[1mmodule.security.aws_security_group.ec2_sg: Creation complete after 2s [id=sg-0dad9a075161f1c72][0m
[0m[1mmodule.security.aws_security_group.efs_sg: Creating...[0m[0m
[0m[1mmodule.security.aws_security_group.rds_sg: Creating...[0m[0m
[0m[1mmodule.security.aws_security_group.rds_sg: Creation complete after 2s [id=sg-0067b76ba2eab1f16][0m
[0m[1mmodule.security.aws_security_group.efs_sg: Creation complete after 3s [id=sg-0ec1248523077e3de][0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Creating...[0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Creating...[0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Creating...[0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Creation complete after 1m23s [id=fsmt-073863d602119d372][0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Creation complete after 1m23s [id=fsmt-0880dec6726504c3c][0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Creation complete after 1m55s [id=nat-020a6f83525b5963e][0m
[0m[1mmodule.networking.aws_route_table.private_route: Creating...[0m[0m
[0m[1mmodule.networking.aws_route_table.private_route: Creation complete after 1s [id=rtb-0890e78710b09d10d][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_3_association: Creating...[0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_2_association: Creating...[0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_1_association: Creating...[0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_1_association: Creation complete after 1s [id=rtbassoc-08db27a44c523b48f][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_2_association: Creation complete after 1s [id=rtbassoc-0993f3ba72e8ba85b][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_3_association: Creation complete after 1s [id=rtbassoc-0621cdcbf7816190c][0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [2m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [2m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Still creating... [2m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Creation complete after 2m43s [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05][0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [2m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [2m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [3m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [3m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [3m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [3m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [3m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [3m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [4m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [4m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [4m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [4m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [4m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [4m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [5m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [5m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [5m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [5m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [5m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [5m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [6m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [6m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [6m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [6m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [6m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [6m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [7m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [7m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [7m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [7m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [7m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [7m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [8m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [8m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [8m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [8m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [8m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [8m51s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [9m1s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [9m11s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [9m21s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [9m31s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [9m41s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [9m51s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [10m1s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [10m11s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [10m21s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [10m31s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [10m41s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [10m51s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [11m1s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [11m11s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [11m21s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [11m31s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [11m41s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [11m51s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still creating... [12m1s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Creation complete after 12m4s [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA][0m
[0m[1mmodule.instances.aws_instance.bastion: Creating...[0m[0m
[0m[1mmodule.instances.aws_launch_configuration.wordpress_lc: Creating...[0m[0m
[0m[1mmodule.instances.aws_launch_configuration.wordpress_lc: Creation complete after 1s [id=terraform-2024041601151000870000000a][0m
[0m[1mmodule.instances.aws_lb_target_group.wordpress_tg: Creating...[0m[0m
[0m[1mmodule.instances.aws_lb_target_group.wordpress_tg: Creation complete after 1s [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b][0m
[0m[1mmodule.instances.aws_lb_listener.wordpress_listener: Creating...[0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Creating...[0m[0m
[0m[1mmodule.instances.aws_lb_listener.wordpress_listener: Creation complete after 1s [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd][0m
[0m[1mmodule.instances.aws_instance.bastion: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Creation complete after 33s [id=i-00ad5f8056bafb54f][0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Creation complete after 37s [id=terraform-2024041601151220070000000b][0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_in_policy: Creating...[0m[0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_out_policy: Creating...[0m[0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_in_policy: Creation complete after 0s [id=scale-in-policy][0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_in: Creating...[0m[0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_out_policy: Creation complete after 0s [id=scale-out-policy][0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_out: Creating...[0m[0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_in: Creation complete after 0s [id=wordpress_scale_down][0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_out: Creation complete after 1s [id=wordpress_scale_up][0m
[0m[1m[32m
Apply complete! Resources: 37 added, 0 changed, 0 destroyed.
[0m[0m[1mmodule.networking.aws_eip.nat_eip: Refreshing state... [id=eipalloc-0c0b778fe697b8c27][0m
[0m[1mmodule.networking.aws_vpc.main: Refreshing state... [id=vpc-020ae876256aed30a][0m
[0m[1mmodule.instances.aws_efs_file_system.wordpress_efs: Refreshing state... [id=fs-048996c9210948b78][0m
[0m[1mmodule.instances.aws_efs_backup_policy.policy: Refreshing state... [id=fs-048996c9210948b78][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_2: Refreshing state... [id=subnet-00293d745b25416ec][0m
[0m[1mmodule.networking.aws_subnet.public_subnet_2: Refreshing state... [id=subnet-032b9e24f96ee2ffb][0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Refreshing state... [id=igw-03f02111f9c0594be][0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Refreshing state... [id=subnet-053f4b13f4d145ce5][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_3: Refreshing state... [id=subnet-0ed054c4ecdc2ae29][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_1: Refreshing state... [id=subnet-0744cbc0e0a099eb1][0m
[0m[1mmodule.security.aws_security_group.lb_sg: Refreshing state... [id=sg-0fea3842e48e1897d][0m
[0m[1mmodule.security.aws_security_group.bastion_sg: Refreshing state... [id=sg-096365d38e08173e9][0m
[0m[1mmodule.networking.aws_route_table.public_route: Refreshing state... [id=rtb-0afab117c26a63c55][0m
[0m[1mmodule.instances.aws_db_subnet_group.db-subnet: Refreshing state... [id=db subnet group - testnew][0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Refreshing state... [id=nat-020a6f83525b5963e][0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05][0m
[0m[1mmodule.security.aws_security_group.ec2_sg: Refreshing state... [id=sg-0dad9a075161f1c72][0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_1_association: Refreshing state... [id=rtbassoc-0586c4e54e7118c8b][0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_2_association: Refreshing state... [id=rtbassoc-068f4c37fef3c3aca][0m
[0m[1mmodule.networking.aws_route_table.private_route: Refreshing state... [id=rtb-0890e78710b09d10d][0m
[0m[1mmodule.security.aws_security_group.efs_sg: Refreshing state... [id=sg-0ec1248523077e3de][0m
[0m[1mmodule.security.aws_security_group.rds_sg: Refreshing state... [id=sg-0067b76ba2eab1f16][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_1_association: Refreshing state... [id=rtbassoc-08db27a44c523b48f][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_3_association: Refreshing state... [id=rtbassoc-0621cdcbf7816190c][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_2_association: Refreshing state... [id=rtbassoc-0993f3ba72e8ba85b][0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Refreshing state... [id=fsmt-073863d602119d372][0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Refreshing state... [id=fsmt-0880dec6726504c3c][0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Refreshing state... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA][0m
[0m[1mmodule.instances.aws_launch_configuration.wordpress_lc: Refreshing state... [id=terraform-2024041601151000870000000a][0m
[0m[1mmodule.instances.aws_instance.bastion: Refreshing state... [id=i-00ad5f8056bafb54f][0m
[0m[1mmodule.instances.aws_lb_target_group.wordpress_tg: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b][0m
[0m[1mmodule.instances.aws_lb_listener.wordpress_listener: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd][0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Refreshing state... [id=terraform-2024041601151220070000000b][0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_in_policy: Refreshing state... [id=scale-in-policy][0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_out_policy: Refreshing state... [id=scale-out-policy][0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_out: Refreshing state... [id=wordpress_scale_up][0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_in: Refreshing state... [id=wordpress_scale_down][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [31m-[0m destroy[0m

Terraform will perform the following actions:

[1m  # module.instances.aws_autoscaling_group.wordpress_asg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_autoscaling_group" "wordpress_asg" {
      [31m-[0m[0m arn                              = "arn:aws:autoscaling:ap-southeast-2:851725468631:autoScalingGroup:1d510600-ab81-44cc-bf38-81464e5ed1a2:autoScalingGroupName/terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m availability_zones               = [
          [31m-[0m[0m "ap-southeast-2a",
          [31m-[0m[0m "ap-southeast-2b",
        ] [90m-> null[0m[0m
      [31m-[0m[0m capacity_rebalance               = false [90m-> null[0m[0m
      [31m-[0m[0m default_cooldown                 = 300 [90m-> null[0m[0m
      [31m-[0m[0m default_instance_warmup          = 0 [90m-> null[0m[0m
      [31m-[0m[0m desired_capacity                 = 3 [90m-> null[0m[0m
      [31m-[0m[0m enabled_metrics                  = [] [90m-> null[0m[0m
      [31m-[0m[0m force_delete                     = false [90m-> null[0m[0m
      [31m-[0m[0m force_delete_warm_pool           = false [90m-> null[0m[0m
      [31m-[0m[0m health_check_grace_period        = 300 [90m-> null[0m[0m
      [31m-[0m[0m health_check_type                = "ELB" [90m-> null[0m[0m
      [31m-[0m[0m id                               = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m ignore_failed_scaling_activities = false [90m-> null[0m[0m
      [31m-[0m[0m launch_configuration             = "terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m load_balancers                   = [] [90m-> null[0m[0m
      [31m-[0m[0m max_instance_lifetime            = 0 [90m-> null[0m[0m
      [31m-[0m[0m max_size                         = 5 [90m-> null[0m[0m
      [31m-[0m[0m metrics_granularity              = "1Minute" [90m-> null[0m[0m
      [31m-[0m[0m min_size                         = 3 [90m-> null[0m[0m
      [31m-[0m[0m name                             = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix                      = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m predicted_capacity               = 0 [90m-> null[0m[0m
      [31m-[0m[0m protect_from_scale_in            = false [90m-> null[0m[0m
      [31m-[0m[0m service_linked_role_arn          = "arn:aws:iam::851725468631:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling" [90m-> null[0m[0m
      [31m-[0m[0m suspended_processes              = [] [90m-> null[0m[0m
      [31m-[0m[0m target_group_arns                = [
          [31m-[0m[0m "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b",
        ] [90m-> null[0m[0m
      [31m-[0m[0m termination_policies             = [] [90m-> null[0m[0m
      [31m-[0m[0m vpc_zone_identifier              = [
          [31m-[0m[0m "subnet-00293d745b25416ec",
          [31m-[0m[0m "subnet-0744cbc0e0a099eb1",
        ] [90m-> null[0m[0m
      [31m-[0m[0m wait_for_capacity_timeout        = "10m" [90m-> null[0m[0m
      [31m-[0m[0m warm_pool_size                   = 0 [90m-> null[0m[0m

      [31m-[0m[0m tag {
          [31m-[0m[0m key                 = "Name" [90m-> null[0m[0m
          [31m-[0m[0m propagate_at_launch = true [90m-> null[0m[0m
          [31m-[0m[0m value               = "Wordpress App - testnew" [90m-> null[0m[0m
        }

      [31m-[0m[0m traffic_source {
          [31m-[0m[0m identifier = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
          [31m-[0m[0m type       = "elbv2" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_autoscaling_policy.scale_in_policy[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_autoscaling_policy" "scale_in_policy" {
      [31m-[0m[0m adjustment_type           = "ChangeInCapacity" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:7269a92d-de34-431e-bd95-51779e81885f:autoScalingGroupName/terraform-2024041601151220070000000b:policyName/scale-in-policy" [90m-> null[0m[0m
      [31m-[0m[0m autoscaling_group_name    = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m cooldown                  = 120 [90m-> null[0m[0m
      [31m-[0m[0m enabled                   = true [90m-> null[0m[0m
      [31m-[0m[0m estimated_instance_warmup = 0 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "scale-in-policy" [90m-> null[0m[0m
      [31m-[0m[0m min_adjustment_magnitude  = 0 [90m-> null[0m[0m
      [31m-[0m[0m name                      = "scale-in-policy" [90m-> null[0m[0m
      [31m-[0m[0m policy_type               = "SimpleScaling" [90m-> null[0m[0m
      [31m-[0m[0m scaling_adjustment        = -1 [90m-> null[0m[0m
    }

[1m  # module.instances.aws_autoscaling_policy.scale_out_policy[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_autoscaling_policy" "scale_out_policy" {
      [31m-[0m[0m adjustment_type           = "ChangeInCapacity" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:ad2ee421-52ee-4eef-b0e3-755f8f256725:autoScalingGroupName/terraform-2024041601151220070000000b:policyName/scale-out-policy" [90m-> null[0m[0m
      [31m-[0m[0m autoscaling_group_name    = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m cooldown                  = 120 [90m-> null[0m[0m
      [31m-[0m[0m enabled                   = true [90m-> null[0m[0m
      [31m-[0m[0m estimated_instance_warmup = 0 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "scale-out-policy" [90m-> null[0m[0m
      [31m-[0m[0m min_adjustment_magnitude  = 0 [90m-> null[0m[0m
      [31m-[0m[0m name                      = "scale-out-policy" [90m-> null[0m[0m
      [31m-[0m[0m policy_type               = "SimpleScaling" [90m-> null[0m[0m
      [31m-[0m[0m scaling_adjustment        = 1 [90m-> null[0m[0m
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_in[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_in" {
      [31m-[0m[0m actions_enabled           = true [90m-> null[0m[0m
      [31m-[0m[0m alarm_actions             = [
          [31m-[0m[0m "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:654bdb88-23e1-455d-be1b-5ebda2cb7e1c:autoScalingGroupName/terraform-2024041602033750440000000b:policyName/scale-in-policy",
        ] [90m-> null[0m[0m
      [31m-[0m[0m alarm_description         = "Monitors Request Count for Wordpress ASG" [90m-> null[0m[0m
      [31m-[0m[0m alarm_name                = "wordpress_scale_down" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:cloudwatch:ap-southeast-2:851725468631:alarm:wordpress_scale_down" [90m-> null[0m[0m
      [31m-[0m[0m comparison_operator       = "LessThanOrEqualToThreshold" [90m-> null[0m[0m
      [31m-[0m[0m datapoints_to_alarm       = 0 [90m-> null[0m[0m
      [31m-[0m[0m dimensions                = {
          [31m-[0m[0m "AutoScalingGroupName" = "terraform-2024041602033750440000000b"
        } [90m-> null[0m[0m
      [31m-[0m[0m evaluation_periods        = 2 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "wordpress_scale_down" [90m-> null[0m[0m
      [31m-[0m[0m insufficient_data_actions = [] [90m-> null[0m[0m
      [31m-[0m[0m metric_name               = "RequestCountPerTarget" [90m-> null[0m[0m
      [31m-[0m[0m namespace                 = "AWS/EC2" [90m-> null[0m[0m
      [31m-[0m[0m ok_actions                = [] [90m-> null[0m[0m
      [31m-[0m[0m period                    = 10 [90m-> null[0m[0m
      [31m-[0m[0m statistic                 = "Sum" [90m-> null[0m[0m
      [31m-[0m[0m tags                      = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all                  = {} [90m-> null[0m[0m
      [31m-[0m[0m threshold                 = 5 [90m-> null[0m[0m
      [31m-[0m[0m treat_missing_data        = "missing" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_out[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_out" {
      [31m-[0m[0m actions_enabled           = true [90m-> null[0m[0m
      [31m-[0m[0m alarm_actions             = [
          [31m-[0m[0m "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:6f1b8fef-b6e2-42e7-b231-c6fa8ad74c28:autoScalingGroupName/terraform-2024041602033750440000000b:policyName/scale-out-policy",
        ] [90m-> null[0m[0m
      [31m-[0m[0m alarm_description         = "Monitors Request Count for Wordpress ASG" [90m-> null[0m[0m
      [31m-[0m[0m alarm_name                = "wordpress_scale_up" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:cloudwatch:ap-southeast-2:851725468631:alarm:wordpress_scale_up" [90m-> null[0m[0m
      [31m-[0m[0m comparison_operator       = "GreaterThanOrEqualToThreshold" [90m-> null[0m[0m
      [31m-[0m[0m datapoints_to_alarm       = 0 [90m-> null[0m[0m
      [31m-[0m[0m dimensions                = {
          [31m-[0m[0m "AutoScalingGroupName" = "terraform-2024041602033750440000000b"
        } [90m-> null[0m[0m
      [31m-[0m[0m evaluation_periods        = 2 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "wordpress_scale_up" [90m-> null[0m[0m
      [31m-[0m[0m insufficient_data_actions = [] [90m-> null[0m[0m
      [31m-[0m[0m metric_name               = "RequestCountPerTarget" [90m-> null[0m[0m
      [31m-[0m[0m namespace                 = "AWS/EC2" [90m-> null[0m[0m
      [31m-[0m[0m ok_actions                = [] [90m-> null[0m[0m
      [31m-[0m[0m period                    = 10 [90m-> null[0m[0m
      [31m-[0m[0m statistic                 = "Sum" [90m-> null[0m[0m
      [31m-[0m[0m tags                      = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all                  = {} [90m-> null[0m[0m
      [31m-[0m[0m threshold                 = 10 [90m-> null[0m[0m
      [31m-[0m[0m treat_missing_data        = "missing" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_db_instance.wordpress_db[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_db_instance" "wordpress_db" {
      [31m-[0m[0m address                               = "wordpress-testnew.cdiegci4gw5z.ap-southeast-2.rds.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m allocated_storage                     = 20 [90m-> null[0m[0m
      [31m-[0m[0m apply_immediately                     = false [90m-> null[0m[0m
      [31m-[0m[0m arn                                   = "arn:aws:rds:ap-southeast-2:851725468631:db:wordpress-testnew" [90m-> null[0m[0m
      [31m-[0m[0m auto_minor_version_upgrade            = true [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                     = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m backup_retention_period               = 0 [90m-> null[0m[0m
      [31m-[0m[0m backup_target                         = "region" [90m-> null[0m[0m
      [31m-[0m[0m backup_window                         = "13:23-13:53" [90m-> null[0m[0m
      [31m-[0m[0m ca_cert_identifier                    = "rds-ca-rsa2048-g1" [90m-> null[0m[0m
      [31m-[0m[0m copy_tags_to_snapshot                 = false [90m-> null[0m[0m
      [31m-[0m[0m customer_owned_ip_enabled             = false [90m-> null[0m[0m
      [31m-[0m[0m db_name                               = "wordpress" [90m-> null[0m[0m
      [31m-[0m[0m db_subnet_group_name                  = "db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m delete_automated_backups              = true [90m-> null[0m[0m
      [31m-[0m[0m deletion_protection                   = false [90m-> null[0m[0m
      [31m-[0m[0m domain_dns_ips                        = [] [90m-> null[0m[0m
      [31m-[0m[0m enabled_cloudwatch_logs_exports       = [] [90m-> null[0m[0m
      [31m-[0m[0m endpoint                              = "wordpress-testnew.cdiegci4gw5z.ap-southeast-2.rds.amazonaws.com:3306" [90m-> null[0m[0m
      [31m-[0m[0m engine                                = "mariadb" [90m-> null[0m[0m
      [31m-[0m[0m engine_version                        = "10.11.5" [90m-> null[0m[0m
      [31m-[0m[0m engine_version_actual                 = "10.11.5" [90m-> null[0m[0m
      [31m-[0m[0m hosted_zone_id                        = "Z32T0VRHXEXS0V" [90m-> null[0m[0m
      [31m-[0m[0m iam_database_authentication_enabled   = false [90m-> null[0m[0m
      [31m-[0m[0m id                                    = "db-OAHO7L7FD3J7O6BIBPYVGR26AA" [90m-> null[0m[0m
      [31m-[0m[0m identifier                            = "wordpress-testnew" [90m-> null[0m[0m
      [31m-[0m[0m instance_class                        = "db.t3.micro" [90m-> null[0m[0m
      [31m-[0m[0m iops                                  = 3000 [90m-> null[0m[0m
      [31m-[0m[0m license_model                         = "general-public-license" [90m-> null[0m[0m
      [31m-[0m[0m listener_endpoint                     = [] [90m-> null[0m[0m
      [31m-[0m[0m maintenance_window                    = "tue:17:57-tue:18:27" [90m-> null[0m[0m
      [31m-[0m[0m master_user_secret                    = [] [90m-> null[0m[0m
      [31m-[0m[0m max_allocated_storage                 = 0 [90m-> null[0m[0m
      [31m-[0m[0m monitoring_interval                   = 0 [90m-> null[0m[0m
      [31m-[0m[0m multi_az                              = true [90m-> null[0m[0m
      [31m-[0m[0m network_type                          = "IPV4" [90m-> null[0m[0m
      [31m-[0m[0m option_group_name                     = "default:mariadb-10-11" [90m-> null[0m[0m
      [31m-[0m[0m parameter_group_name                  = "default.mariadb10.11" [90m-> null[0m[0m
      [31m-[0m[0m password                              = (sensitive value) [90m-> null[0m[0m
      [31m-[0m[0m performance_insights_enabled          = false [90m-> null[0m[0m
      [31m-[0m[0m performance_insights_retention_period = 0 [90m-> null[0m[0m
      [31m-[0m[0m port                                  = 3306 [90m-> null[0m[0m
      [31m-[0m[0m publicly_accessible                   = false [90m-> null[0m[0m
      [31m-[0m[0m replicas                              = [] [90m-> null[0m[0m
      [31m-[0m[0m resource_id                           = "db-OAHO7L7FD3J7O6BIBPYVGR26AA" [90m-> null[0m[0m
      [31m-[0m[0m skip_final_snapshot                   = true [90m-> null[0m[0m
      [31m-[0m[0m status                                = "available" [90m-> null[0m[0m
      [31m-[0m[0m storage_encrypted                     = false [90m-> null[0m[0m
      [31m-[0m[0m storage_throughput                    = 125 [90m-> null[0m[0m
      [31m-[0m[0m storage_type                          = "gp3" [90m-> null[0m[0m
      [31m-[0m[0m tags                                  = {
          [31m-[0m[0m "Name" = "WordPress DB - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                              = {
          [31m-[0m[0m "Name" = "WordPress DB - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m username                              = "wordpressuser" [90m-> null[0m[0m
      [31m-[0m[0m vpc_security_group_ids                = [
          [31m-[0m[0m "sg-0067b76ba2eab1f16",
        ] [90m-> null[0m[0m
    }

[1m  # module.instances.aws_db_subnet_group.db-subnet[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_db_subnet_group" "db-subnet" {
      [31m-[0m[0m arn                     = "arn:aws:rds:ap-southeast-2:851725468631:subgrp:db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m description             = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m id                      = "db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m name                    = "db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m subnet_ids              = [
          [31m-[0m[0m "subnet-00293d745b25416ec",
          [31m-[0m[0m "subnet-0744cbc0e0a099eb1",
          [31m-[0m[0m "subnet-0ed054c4ecdc2ae29",
        ] [90m-> null[0m[0m
      [31m-[0m[0m supported_network_types = [
          [31m-[0m[0m "IPV4",
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags                    = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all                = {} [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                  = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_efs_backup_policy.policy[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_backup_policy" "policy" {
      [31m-[0m[0m file_system_id = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m id             = "fs-048996c9210948b78" [90m-> null[0m[0m

      [31m-[0m[0m backup_policy {
          [31m-[0m[0m status = "DISABLED" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_efs_file_system.wordpress_efs[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_file_system" "wordpress_efs" {
      [31m-[0m[0m arn                             = "arn:aws:elasticfilesystem:ap-southeast-2:851725468631:file-system/fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m creation_token                  = "wordpress-efs-testnew" [90m-> null[0m[0m
      [31m-[0m[0m dns_name                        = "fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m encrypted                       = false [90m-> null[0m[0m
      [31m-[0m[0m id                              = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m name                            = "WordPressEFS-testnew" [90m-> null[0m[0m
      [31m-[0m[0m number_of_mount_targets         = 2 [90m-> null[0m[0m
      [31m-[0m[0m owner_id                        = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m performance_mode                = "generalPurpose" [90m-> null[0m[0m
      [31m-[0m[0m provisioned_throughput_in_mibps = 0 [90m-> null[0m[0m
      [31m-[0m[0m size_in_bytes                   = [
          [31m-[0m[0m {
              [31m-[0m[0m value             = 85610496
              [31m-[0m[0m value_in_ia       = 0
              [31m-[0m[0m value_in_standard = 85610496
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags                            = {
          [31m-[0m[0m "Name" = "WordPressEFS-testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                        = {
          [31m-[0m[0m "Name" = "WordPressEFS-testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m throughput_mode                 = "bursting" [90m-> null[0m[0m

      [31m-[0m[0m protection {
          [31m-[0m[0m replication_overwrite = "ENABLED" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [31m-[0m[0m availability_zone_id   = "apse2-az3" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_name = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m dns_name               = "fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m file_system_arn        = "arn:aws:elasticfilesystem:ap-southeast-2:851725468631:file-system/fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m file_system_id         = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m id                     = "fsmt-073863d602119d372" [90m-> null[0m[0m
      [31m-[0m[0m ip_address             = "10.0.3.236" [90m-> null[0m[0m
      [31m-[0m[0m mount_target_dns_name  = "ap-southeast-2a.fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m network_interface_id   = "eni-0ad24d7569c01aad9" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m security_groups        = [
          [31m-[0m[0m "sg-0ec1248523077e3de",
        ] [90m-> null[0m[0m
      [31m-[0m[0m subnet_id              = "subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[1][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [31m-[0m[0m availability_zone_id   = "apse2-az1" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_name = "ap-southeast-2b" [90m-> null[0m[0m
      [31m-[0m[0m dns_name               = "fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m file_system_arn        = "arn:aws:elasticfilesystem:ap-southeast-2:851725468631:file-system/fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m file_system_id         = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m id                     = "fsmt-0880dec6726504c3c" [90m-> null[0m[0m
      [31m-[0m[0m ip_address             = "10.0.4.240" [90m-> null[0m[0m
      [31m-[0m[0m mount_target_dns_name  = "ap-southeast-2b.fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m network_interface_id   = "eni-034f10518cf8c4e17" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m security_groups        = [
          [31m-[0m[0m "sg-0ec1248523077e3de",
        ] [90m-> null[0m[0m
      [31m-[0m[0m subnet_id              = "subnet-00293d745b25416ec" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_instance.bastion[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_instance" "bastion" {
      [31m-[0m[0m ami                                  = "ami-0df5c32c4d4710802" [90m-> null[0m[0m
      [31m-[0m[0m arn                                  = "arn:aws:ec2:ap-southeast-2:851725468631:instance/i-00ad5f8056bafb54f" [90m-> null[0m[0m
      [31m-[0m[0m associate_public_ip_address          = true [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                    = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m cpu_core_count                       = 1 [90m-> null[0m[0m
      [31m-[0m[0m cpu_threads_per_core                 = 1 [90m-> null[0m[0m
      [31m-[0m[0m disable_api_stop                     = false [90m-> null[0m[0m
      [31m-[0m[0m disable_api_termination              = false [90m-> null[0m[0m
      [31m-[0m[0m ebs_optimized                        = false [90m-> null[0m[0m
      [31m-[0m[0m get_password_data                    = false [90m-> null[0m[0m
      [31m-[0m[0m hibernation                          = false [90m-> null[0m[0m
      [31m-[0m[0m id                                   = "i-00ad5f8056bafb54f" [90m-> null[0m[0m
      [31m-[0m[0m instance_initiated_shutdown_behavior = "stop" [90m-> null[0m[0m
      [31m-[0m[0m instance_state                       = "running" [90m-> null[0m[0m
      [31m-[0m[0m instance_type                        = "t2.micro" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_address_count                   = 0 [90m-> null[0m[0m
      [31m-[0m[0m ipv6_addresses                       = [] [90m-> null[0m[0m
      [31m-[0m[0m key_name                             = "bastion-key" [90m-> null[0m[0m
      [31m-[0m[0m monitoring                           = true [90m-> null[0m[0m
      [31m-[0m[0m placement_partition_number           = 0 [90m-> null[0m[0m
      [31m-[0m[0m primary_network_interface_id         = "eni-03a84e579707a88e7" [90m-> null[0m[0m
      [31m-[0m[0m private_dns                          = "ip-10-0-1-243.ap-southeast-2.compute.internal" [90m-> null[0m[0m
      [31m-[0m[0m private_ip                           = "10.0.1.243" [90m-> null[0m[0m
      [31m-[0m[0m public_dns                           = "ec2-54-252-212-107.ap-southeast-2.compute.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m public_ip                            = "54.252.212.107" [90m-> null[0m[0m
      [31m-[0m[0m secondary_private_ips                = [] [90m-> null[0m[0m
      [31m-[0m[0m security_groups                      = [] [90m-> null[0m[0m
      [31m-[0m[0m source_dest_check                    = true [90m-> null[0m[0m
      [31m-[0m[0m subnet_id                            = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m tags                                 = {
          [31m-[0m[0m "Name" = "Bastion Instance - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                             = {
          [31m-[0m[0m "Name" = "Bastion Instance - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tenancy                              = "default" [90m-> null[0m[0m
      [31m-[0m[0m user_data                            = "d4827bb603446e2dea242c7d9e28fb8e21bb024b" [90m-> null[0m[0m
      [31m-[0m[0m user_data_replace_on_change          = false [90m-> null[0m[0m
      [31m-[0m[0m vpc_security_group_ids               = [
          [31m-[0m[0m "sg-096365d38e08173e9",
        ] [90m-> null[0m[0m

      [31m-[0m[0m capacity_reservation_specification {
          [31m-[0m[0m capacity_reservation_preference = "open" [90m-> null[0m[0m
        }

      [31m-[0m[0m cpu_options {
          [31m-[0m[0m core_count       = 1 [90m-> null[0m[0m
          [31m-[0m[0m threads_per_core = 1 [90m-> null[0m[0m
        }

      [31m-[0m[0m credit_specification {
          [31m-[0m[0m cpu_credits = "standard" [90m-> null[0m[0m
        }

      [31m-[0m[0m enclave_options {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
        }

      [31m-[0m[0m maintenance_options {
          [31m-[0m[0m auto_recovery = "default" [90m-> null[0m[0m
        }

      [31m-[0m[0m metadata_options {
          [31m-[0m[0m http_endpoint               = "enabled" [90m-> null[0m[0m
          [31m-[0m[0m http_protocol_ipv6          = "disabled" [90m-> null[0m[0m
          [31m-[0m[0m http_put_response_hop_limit = 1 [90m-> null[0m[0m
          [31m-[0m[0m http_tokens                 = "optional" [90m-> null[0m[0m
          [31m-[0m[0m instance_metadata_tags      = "disabled" [90m-> null[0m[0m
        }

      [31m-[0m[0m private_dns_name_options {
          [31m-[0m[0m enable_resource_name_dns_a_record    = false [90m-> null[0m[0m
          [31m-[0m[0m enable_resource_name_dns_aaaa_record = false [90m-> null[0m[0m
          [31m-[0m[0m hostname_type                        = "ip-name" [90m-> null[0m[0m
        }

      [31m-[0m[0m root_block_device {
          [31m-[0m[0m delete_on_termination = true [90m-> null[0m[0m
          [31m-[0m[0m device_name           = "/dev/xvda" [90m-> null[0m[0m
          [31m-[0m[0m encrypted             = false [90m-> null[0m[0m
          [31m-[0m[0m iops                  = 100 [90m-> null[0m[0m
          [31m-[0m[0m tags                  = {} [90m-> null[0m[0m
          [31m-[0m[0m tags_all              = {} [90m-> null[0m[0m
          [31m-[0m[0m throughput            = 0 [90m-> null[0m[0m
          [31m-[0m[0m volume_id             = "vol-033105f3864cdd8d0" [90m-> null[0m[0m
          [31m-[0m[0m volume_size           = 8 [90m-> null[0m[0m
          [31m-[0m[0m volume_type           = "gp2" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_launch_configuration.wordpress_lc[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_launch_configuration" "wordpress_lc" {
      [31m-[0m[0m arn                         = "arn:aws:autoscaling:ap-southeast-2:851725468631:launchConfiguration:f631c8ff-ce7e-460c-80a1-5e087b694604:launchConfigurationName/terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m associate_public_ip_address = true [90m-> null[0m[0m
      [31m-[0m[0m ebs_optimized               = false [90m-> null[0m[0m
      [31m-[0m[0m enable_monitoring           = true [90m-> null[0m[0m
      [31m-[0m[0m id                          = "terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m image_id                    = "ami-0df5c32c4d4710802" [90m-> null[0m[0m
      [31m-[0m[0m instance_type               = "t2.micro" [90m-> null[0m[0m
      [31m-[0m[0m name                        = "terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix                 = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m security_groups             = [
          [31m-[0m[0m "sg-0dad9a075161f1c72",
        ] [90m-> null[0m[0m
      [31m-[0m[0m user_data                   = "88af2c7ea53651f5c051b0b4ad11dae6396abbde" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_lb.wordpress_lb[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_lb" "wordpress_lb" {
      [31m-[0m[0m arn                                         = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m arn_suffix                                  = "app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m desync_mitigation_mode                      = "defensive" [90m-> null[0m[0m
      [31m-[0m[0m dns_name                                    = "wordpress-lb-testnew-310685834.ap-southeast-2.elb.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m drop_invalid_header_fields                  = false [90m-> null[0m[0m
      [31m-[0m[0m enable_cross_zone_load_balancing            = true [90m-> null[0m[0m
      [31m-[0m[0m enable_deletion_protection                  = false [90m-> null[0m[0m
      [31m-[0m[0m enable_http2                                = true [90m-> null[0m[0m
      [31m-[0m[0m enable_tls_version_and_cipher_suite_headers = false [90m-> null[0m[0m
      [31m-[0m[0m enable_waf_fail_open                        = false [90m-> null[0m[0m
      [31m-[0m[0m enable_xff_client_port                      = false [90m-> null[0m[0m
      [31m-[0m[0m id                                          = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m idle_timeout                                = 60 [90m-> null[0m[0m
      [31m-[0m[0m internal                                    = false [90m-> null[0m[0m
      [31m-[0m[0m ip_address_type                             = "ipv4" [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_type                          = "application" [90m-> null[0m[0m
      [31m-[0m[0m name                                        = "wordpress-lb-testnew" [90m-> null[0m[0m
      [31m-[0m[0m preserve_host_header                        = false [90m-> null[0m[0m
      [31m-[0m[0m security_groups                             = [
          [31m-[0m[0m "sg-0fea3842e48e1897d",
        ] [90m-> null[0m[0m
      [31m-[0m[0m subnets                                     = [
          [31m-[0m[0m "subnet-032b9e24f96ee2ffb",
          [31m-[0m[0m "subnet-053f4b13f4d145ce5",
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags                                        = {
          [31m-[0m[0m "Name" = "Application Load Balancer - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                    = {
          [31m-[0m[0m "Name" = "Application Load Balancer - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                      = "vpc-020ae876256aed30a" [90m-> null[0m[0m
      [31m-[0m[0m xff_header_processing_mode                  = "append" [90m-> null[0m[0m
      [31m-[0m[0m zone_id                                     = "Z1GM3OXH4ZPM65" [90m-> null[0m[0m

      [31m-[0m[0m access_logs {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
        }

      [31m-[0m[0m connection_logs {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
        }

      [31m-[0m[0m subnet_mapping {
          [31m-[0m[0m subnet_id = "subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
        }
      [31m-[0m[0m subnet_mapping {
          [31m-[0m[0m subnet_id = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_lb_listener.wordpress_listener[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_lb_listener" "wordpress_listener" {
      [31m-[0m[0m arn               = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd" [90m-> null[0m[0m
      [31m-[0m[0m id                = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd" [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_arn = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m port              = 80 [90m-> null[0m[0m
      [31m-[0m[0m protocol          = "HTTP" [90m-> null[0m[0m
      [31m-[0m[0m tags              = {
          [31m-[0m[0m "Name" = "Listener for LB - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all          = {
          [31m-[0m[0m "Name" = "Listener for LB - testnew"
        } [90m-> null[0m[0m

      [31m-[0m[0m default_action {
          [31m-[0m[0m order            = 1 [90m-> null[0m[0m
          [31m-[0m[0m target_group_arn = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
          [31m-[0m[0m type             = "forward" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_lb_target_group.wordpress_tg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_lb_target_group" "wordpress_tg" {
      [31m-[0m[0m arn                                = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
      [31m-[0m[0m arn_suffix                         = "targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
      [31m-[0m[0m deregistration_delay               = "300" [90m-> null[0m[0m
      [31m-[0m[0m id                                 = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
      [31m-[0m[0m ip_address_type                    = "ipv4" [90m-> null[0m[0m
      [31m-[0m[0m lambda_multi_value_headers_enabled = false [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_arns                 = [
          [31m-[0m[0m "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05",
        ] [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_algorithm_type      = "round_robin" [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_anomaly_mitigation  = "off" [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_cross_zone_enabled  = "use_load_balancer_configuration" [90m-> null[0m[0m
      [31m-[0m[0m name                               = "wordpress-tg-testnew" [90m-> null[0m[0m
      [31m-[0m[0m port                               = 80 [90m-> null[0m[0m
      [31m-[0m[0m protocol                           = "HTTP" [90m-> null[0m[0m
      [31m-[0m[0m protocol_version                   = "HTTP1" [90m-> null[0m[0m
      [31m-[0m[0m proxy_protocol_v2                  = false [90m-> null[0m[0m
      [31m-[0m[0m slow_start                         = 0 [90m-> null[0m[0m
      [31m-[0m[0m tags                               = {
          [31m-[0m[0m "Name" = "Target Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                           = {
          [31m-[0m[0m "Name" = "Target Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m target_type                        = "instance" [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                             = "vpc-020ae876256aed30a" [90m-> null[0m[0m

      [31m-[0m[0m health_check {
          [31m-[0m[0m enabled             = true [90m-> null[0m[0m
          [31m-[0m[0m healthy_threshold   = 2 [90m-> null[0m[0m
          [31m-[0m[0m interval            = 25 [90m-> null[0m[0m
          [31m-[0m[0m matcher             = "200,301" [90m-> null[0m[0m
          [31m-[0m[0m path                = "/wordpress" [90m-> null[0m[0m
          [31m-[0m[0m port                = "80" [90m-> null[0m[0m
          [31m-[0m[0m protocol            = "HTTP" [90m-> null[0m[0m
          [31m-[0m[0m timeout             = 20 [90m-> null[0m[0m
          [31m-[0m[0m unhealthy_threshold = 2 [90m-> null[0m[0m
        }

      [31m-[0m[0m stickiness {
          [31m-[0m[0m cookie_duration = 86400 [90m-> null[0m[0m
          [31m-[0m[0m enabled         = false [90m-> null[0m[0m
          [31m-[0m[0m type            = "lb_cookie" [90m-> null[0m[0m
        }

      [31m-[0m[0m target_failover {}

      [31m-[0m[0m target_health_state {}
    }

[1m  # module.networking.aws_eip.nat_eip[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_eip" "nat_eip" {
      [31m-[0m[0m allocation_id        = "eipalloc-0c0b778fe697b8c27" [90m-> null[0m[0m
      [31m-[0m[0m association_id       = "eipassoc-0da3eeedad3332ce6" [90m-> null[0m[0m
      [31m-[0m[0m domain               = "vpc" [90m-> null[0m[0m
      [31m-[0m[0m id                   = "eipalloc-0c0b778fe697b8c27" [90m-> null[0m[0m
      [31m-[0m[0m network_border_group = "ap-southeast-2" [90m-> null[0m[0m
      [31m-[0m[0m network_interface    = "eni-062f60430213b91ed" [90m-> null[0m[0m
      [31m-[0m[0m private_dns          = "ip-10-0-1-222.ap-southeast-2.compute.internal" [90m-> null[0m[0m
      [31m-[0m[0m private_ip           = "10.0.1.222" [90m-> null[0m[0m
      [31m-[0m[0m public_dns           = "ec2-54-206-42-82.ap-southeast-2.compute.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m public_ip            = "54.206.42.82" [90m-> null[0m[0m
      [31m-[0m[0m public_ipv4_pool     = "amazon" [90m-> null[0m[0m
      [31m-[0m[0m tags                 = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all             = {} [90m-> null[0m[0m
      [31m-[0m[0m vpc                  = true [90m-> null[0m[0m
    }

[1m  # module.networking.aws_internet_gateway.gw[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_internet_gateway" "gw" {
      [31m-[0m[0m arn      = "arn:aws:ec2:ap-southeast-2:851725468631:internet-gateway/igw-03f02111f9c0594be" [90m-> null[0m[0m
      [31m-[0m[0m id       = "igw-03f02111f9c0594be" [90m-> null[0m[0m
      [31m-[0m[0m owner_id = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m tags     = {
          [31m-[0m[0m "Name" = "Internet Gateway"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all = {
          [31m-[0m[0m "Name" = "Internet Gateway"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id   = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_nat_gateway.nat_gateway[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_nat_gateway" "nat_gateway" {
      [31m-[0m[0m allocation_id                      = "eipalloc-0c0b778fe697b8c27" [90m-> null[0m[0m
      [31m-[0m[0m association_id                     = "eipassoc-0da3eeedad3332ce6" [90m-> null[0m[0m
      [31m-[0m[0m connectivity_type                  = "public" [90m-> null[0m[0m
      [31m-[0m[0m id                                 = "nat-020a6f83525b5963e" [90m-> null[0m[0m
      [31m-[0m[0m network_interface_id               = "eni-062f60430213b91ed" [90m-> null[0m[0m
      [31m-[0m[0m private_ip                         = "10.0.1.222" [90m-> null[0m[0m
      [31m-[0m[0m public_ip                          = "54.206.42.82" [90m-> null[0m[0m
      [31m-[0m[0m secondary_allocation_ids           = [] [90m-> null[0m[0m
      [31m-[0m[0m secondary_private_ip_address_count = 0 [90m-> null[0m[0m
      [31m-[0m[0m secondary_private_ip_addresses     = [] [90m-> null[0m[0m
      [31m-[0m[0m subnet_id                          = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m tags                               = {
          [31m-[0m[0m "Name" = "NAT Gateway"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                           = {
          [31m-[0m[0m "Name" = "NAT Gateway"
        } [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table.private_route[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table" "private_route" {
      [31m-[0m[0m arn              = "arn:aws:ec2:ap-southeast-2:851725468631:route-table/rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m id               = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m owner_id         = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m propagating_vgws = [] [90m-> null[0m[0m
      [31m-[0m[0m route            = [
          [31m-[0m[0m {
              [31m-[0m[0m carrier_gateway_id         = ""
              [31m-[0m[0m cidr_block                 = "0.0.0.0/0"
              [31m-[0m[0m core_network_arn           = ""
              [31m-[0m[0m destination_prefix_list_id = ""
              [31m-[0m[0m egress_only_gateway_id     = ""
              [31m-[0m[0m gateway_id                 = ""
              [31m-[0m[0m ipv6_cidr_block            = ""
              [31m-[0m[0m local_gateway_id           = ""
              [31m-[0m[0m nat_gateway_id             = "nat-020a6f83525b5963e"
              [31m-[0m[0m network_interface_id       = ""
              [31m-[0m[0m transit_gateway_id         = ""
              [31m-[0m[0m vpc_endpoint_id            = ""
              [31m-[0m[0m vpc_peering_connection_id  = ""
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "Name" = "Private Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "Name" = "Private Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id           = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table.public_route[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table" "public_route" {
      [31m-[0m[0m arn              = "arn:aws:ec2:ap-southeast-2:851725468631:route-table/rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m id               = "rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m owner_id         = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m propagating_vgws = [] [90m-> null[0m[0m
      [31m-[0m[0m route            = [
          [31m-[0m[0m {
              [31m-[0m[0m carrier_gateway_id         = ""
              [31m-[0m[0m cidr_block                 = "0.0.0.0/0"
              [31m-[0m[0m core_network_arn           = ""
              [31m-[0m[0m destination_prefix_list_id = ""
              [31m-[0m[0m egress_only_gateway_id     = ""
              [31m-[0m[0m gateway_id                 = "igw-03f02111f9c0594be"
              [31m-[0m[0m ipv6_cidr_block            = ""
              [31m-[0m[0m local_gateway_id           = ""
              [31m-[0m[0m nat_gateway_id             = ""
              [31m-[0m[0m network_interface_id       = ""
              [31m-[0m[0m transit_gateway_id         = ""
              [31m-[0m[0m vpc_endpoint_id            = ""
              [31m-[0m[0m vpc_peering_connection_id  = ""
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "Name" = "Public Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "Name" = "Public Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id           = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.private_subnet_1_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "private_subnet_1_association" {
      [31m-[0m[0m id             = "rtbassoc-08db27a44c523b48f" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.private_subnet_2_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "private_subnet_2_association" {
      [31m-[0m[0m id             = "rtbassoc-0993f3ba72e8ba85b" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-00293d745b25416ec" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.private_subnet_3_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "private_subnet_3_association" {
      [31m-[0m[0m id             = "rtbassoc-0621cdcbf7816190c" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-0ed054c4ecdc2ae29" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.public_subnet_1_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "public_subnet_1_association" {
      [31m-[0m[0m id             = "rtbassoc-0586c4e54e7118c8b" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.public_subnet_2_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "public_subnet_2_association" {
      [31m-[0m[0m id             = "rtbassoc-068f4c37fef3c3aca" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.private_subnet_1[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "private_subnet_1" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az3" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.3.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Private Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Private Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.private_subnet_2[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "private_subnet_2" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-00293d745b25416ec" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2b" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az1" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.4.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-00293d745b25416ec" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Private Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Private Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.private_subnet_3[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "private_subnet_3" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-0ed054c4ecdc2ae29" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2c" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az2" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.5.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-0ed054c4ecdc2ae29" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Private Subnet 3 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Private Subnet 3 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.public_subnet_1[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "public_subnet_1" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az3" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.1.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Public Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Public Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.public_subnet_2[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "public_subnet_2" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2b" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az1" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.2.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Public Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Public Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_vpc.main[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_vpc" "main" {
      [31m-[0m[0m arn                                  = "arn:aws:ec2:ap-southeast-2:851725468631:vpc/vpc-020ae876256aed30a" [90m-> null[0m[0m
      [31m-[0m[0m assign_generated_ipv6_cidr_block     = false [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                           = "10.0.0.0/16" [90m-> null[0m[0m
      [31m-[0m[0m default_network_acl_id               = "acl-09a94d9f88365203c" [90m-> null[0m[0m
      [31m-[0m[0m default_route_table_id               = "rtb-01b2738e2ee2436ad" [90m-> null[0m[0m
      [31m-[0m[0m default_security_group_id            = "sg-03436f6c3394731e6" [90m-> null[0m[0m
      [31m-[0m[0m dhcp_options_id                      = "dopt-005e63162c413eb8e" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns_hostnames                 = true [90m-> null[0m[0m
      [31m-[0m[0m enable_dns_support                   = true [90m-> null[0m[0m
      [31m-[0m[0m enable_network_address_usage_metrics = false [90m-> null[0m[0m
      [31m-[0m[0m id                                   = "vpc-020ae876256aed30a" [90m-> null[0m[0m
      [31m-[0m[0m instance_tenancy                     = "default" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_netmask_length                  = 0 [90m-> null[0m[0m
      [31m-[0m[0m main_route_table_id                  = "rtb-01b2738e2ee2436ad" [90m-> null[0m[0m
      [31m-[0m[0m owner_id                             = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m tags                                 = {
          [31m-[0m[0m "Name" = "testnew-VPC"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                             = {
          [31m-[0m[0m "Name" = "testnew-VPC"
        } [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.bastion_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "bastion_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-096365d38e08173e9" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-096365d38e08173e9" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 22
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 22
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 443
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 443
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 80
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 80
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010258660100000002" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.ec2_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "ec2_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0dad9a075161f1c72" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0dad9a075161f1c72" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 22
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-096365d38e08173e9",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 22
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 443
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-0fea3842e48e1897d",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 443
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 80
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-0fea3842e48e1897d",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 80
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010301092400000005" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "EC2 Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "EC2 Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.efs_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "efs_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0ec1248523077e3de" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0ec1248523077e3de" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 2049
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-0dad9a075161f1c72",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 2049
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010303498500000006" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "EFS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "EFS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.lb_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "lb_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0fea3842e48e1897d" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0fea3842e48e1897d" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 443
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 443
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 80
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 80
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010258660100000001" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "LB Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "LB Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.rds_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "rds_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0067b76ba2eab1f16" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0067b76ba2eab1f16" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 3306
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-096365d38e08173e9",
                  [31m-[0m[0m "sg-0dad9a075161f1c72",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 3306
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 5432
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-096365d38e08173e9",
                  [31m-[0m[0m "sg-0dad9a075161f1c72",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 5432
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010303510100000007" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1mPlan:[0m 0 to add, 0 to change, 37 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mmodule.networking.aws_eip.nat_eip: Refreshing state... [id=eipalloc-0c0b778fe697b8c27][0m
[0m[1mmodule.networking.aws_vpc.main: Refreshing state... [id=vpc-020ae876256aed30a][0m
[0m[1mmodule.instances.aws_efs_file_system.wordpress_efs: Refreshing state... [id=fs-048996c9210948b78][0m
[0m[1mmodule.instances.aws_efs_backup_policy.policy: Refreshing state... [id=fs-048996c9210948b78][0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Refreshing state... [id=igw-03f02111f9c0594be][0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Refreshing state... [id=subnet-053f4b13f4d145ce5][0m
[0m[1mmodule.networking.aws_subnet.public_subnet_2: Refreshing state... [id=subnet-032b9e24f96ee2ffb][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_1: Refreshing state... [id=subnet-0744cbc0e0a099eb1][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_2: Refreshing state... [id=subnet-00293d745b25416ec][0m
[0m[1mmodule.networking.aws_subnet.private_subnet_3: Refreshing state... [id=subnet-0ed054c4ecdc2ae29][0m
[0m[1mmodule.security.aws_security_group.lb_sg: Refreshing state... [id=sg-0fea3842e48e1897d][0m
[0m[1mmodule.security.aws_security_group.bastion_sg: Refreshing state... [id=sg-096365d38e08173e9][0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Refreshing state... [id=nat-020a6f83525b5963e][0m
[0m[1mmodule.networking.aws_route_table.public_route: Refreshing state... [id=rtb-0afab117c26a63c55][0m
[0m[1mmodule.instances.aws_db_subnet_group.db-subnet: Refreshing state... [id=db subnet group - testnew][0m
[0m[1mmodule.networking.aws_route_table.private_route: Refreshing state... [id=rtb-0890e78710b09d10d][0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05][0m
[0m[1mmodule.security.aws_security_group.ec2_sg: Refreshing state... [id=sg-0dad9a075161f1c72][0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_1_association: Refreshing state... [id=rtbassoc-0586c4e54e7118c8b][0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_2_association: Refreshing state... [id=rtbassoc-068f4c37fef3c3aca][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_3_association: Refreshing state... [id=rtbassoc-0621cdcbf7816190c][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_2_association: Refreshing state... [id=rtbassoc-0993f3ba72e8ba85b][0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_1_association: Refreshing state... [id=rtbassoc-08db27a44c523b48f][0m
[0m[1mmodule.security.aws_security_group.efs_sg: Refreshing state... [id=sg-0ec1248523077e3de][0m
[0m[1mmodule.security.aws_security_group.rds_sg: Refreshing state... [id=sg-0067b76ba2eab1f16][0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Refreshing state... [id=fsmt-073863d602119d372][0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Refreshing state... [id=fsmt-0880dec6726504c3c][0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Refreshing state... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA][0m
[0m[1mmodule.instances.aws_launch_configuration.wordpress_lc: Refreshing state... [id=terraform-2024041601151000870000000a][0m
[0m[1mmodule.instances.aws_instance.bastion: Refreshing state... [id=i-00ad5f8056bafb54f][0m
[0m[1mmodule.instances.aws_lb_target_group.wordpress_tg: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b][0m
[0m[1mmodule.instances.aws_lb_listener.wordpress_listener: Refreshing state... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd][0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Refreshing state... [id=terraform-2024041601151220070000000b][0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_in_policy: Refreshing state... [id=scale-in-policy][0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_out_policy: Refreshing state... [id=scale-out-policy][0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_in: Refreshing state... [id=wordpress_scale_down][0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_out: Refreshing state... [id=wordpress_scale_up][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [31m-[0m destroy[0m

Terraform will perform the following actions:

[1m  # module.instances.aws_autoscaling_group.wordpress_asg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_autoscaling_group" "wordpress_asg" {
      [31m-[0m[0m arn                              = "arn:aws:autoscaling:ap-southeast-2:851725468631:autoScalingGroup:1d510600-ab81-44cc-bf38-81464e5ed1a2:autoScalingGroupName/terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m availability_zones               = [
          [31m-[0m[0m "ap-southeast-2a",
          [31m-[0m[0m "ap-southeast-2b",
        ] [90m-> null[0m[0m
      [31m-[0m[0m capacity_rebalance               = false [90m-> null[0m[0m
      [31m-[0m[0m default_cooldown                 = 300 [90m-> null[0m[0m
      [31m-[0m[0m default_instance_warmup          = 0 [90m-> null[0m[0m
      [31m-[0m[0m desired_capacity                 = 3 [90m-> null[0m[0m
      [31m-[0m[0m enabled_metrics                  = [] [90m-> null[0m[0m
      [31m-[0m[0m force_delete                     = false [90m-> null[0m[0m
      [31m-[0m[0m force_delete_warm_pool           = false [90m-> null[0m[0m
      [31m-[0m[0m health_check_grace_period        = 300 [90m-> null[0m[0m
      [31m-[0m[0m health_check_type                = "ELB" [90m-> null[0m[0m
      [31m-[0m[0m id                               = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m ignore_failed_scaling_activities = false [90m-> null[0m[0m
      [31m-[0m[0m launch_configuration             = "terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m load_balancers                   = [] [90m-> null[0m[0m
      [31m-[0m[0m max_instance_lifetime            = 0 [90m-> null[0m[0m
      [31m-[0m[0m max_size                         = 5 [90m-> null[0m[0m
      [31m-[0m[0m metrics_granularity              = "1Minute" [90m-> null[0m[0m
      [31m-[0m[0m min_size                         = 3 [90m-> null[0m[0m
      [31m-[0m[0m name                             = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix                      = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m predicted_capacity               = 0 [90m-> null[0m[0m
      [31m-[0m[0m protect_from_scale_in            = false [90m-> null[0m[0m
      [31m-[0m[0m service_linked_role_arn          = "arn:aws:iam::851725468631:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling" [90m-> null[0m[0m
      [31m-[0m[0m suspended_processes              = [] [90m-> null[0m[0m
      [31m-[0m[0m target_group_arns                = [
          [31m-[0m[0m "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b",
        ] [90m-> null[0m[0m
      [31m-[0m[0m termination_policies             = [] [90m-> null[0m[0m
      [31m-[0m[0m vpc_zone_identifier              = [
          [31m-[0m[0m "subnet-00293d745b25416ec",
          [31m-[0m[0m "subnet-0744cbc0e0a099eb1",
        ] [90m-> null[0m[0m
      [31m-[0m[0m wait_for_capacity_timeout        = "10m" [90m-> null[0m[0m
      [31m-[0m[0m warm_pool_size                   = 0 [90m-> null[0m[0m

      [31m-[0m[0m tag {
          [31m-[0m[0m key                 = "Name" [90m-> null[0m[0m
          [31m-[0m[0m propagate_at_launch = true [90m-> null[0m[0m
          [31m-[0m[0m value               = "Wordpress App - testnew" [90m-> null[0m[0m
        }

      [31m-[0m[0m traffic_source {
          [31m-[0m[0m identifier = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
          [31m-[0m[0m type       = "elbv2" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_autoscaling_policy.scale_in_policy[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_autoscaling_policy" "scale_in_policy" {
      [31m-[0m[0m adjustment_type           = "ChangeInCapacity" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:7269a92d-de34-431e-bd95-51779e81885f:autoScalingGroupName/terraform-2024041601151220070000000b:policyName/scale-in-policy" [90m-> null[0m[0m
      [31m-[0m[0m autoscaling_group_name    = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m cooldown                  = 120 [90m-> null[0m[0m
      [31m-[0m[0m enabled                   = true [90m-> null[0m[0m
      [31m-[0m[0m estimated_instance_warmup = 0 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "scale-in-policy" [90m-> null[0m[0m
      [31m-[0m[0m min_adjustment_magnitude  = 0 [90m-> null[0m[0m
      [31m-[0m[0m name                      = "scale-in-policy" [90m-> null[0m[0m
      [31m-[0m[0m policy_type               = "SimpleScaling" [90m-> null[0m[0m
      [31m-[0m[0m scaling_adjustment        = -1 [90m-> null[0m[0m
    }

[1m  # module.instances.aws_autoscaling_policy.scale_out_policy[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_autoscaling_policy" "scale_out_policy" {
      [31m-[0m[0m adjustment_type           = "ChangeInCapacity" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:ad2ee421-52ee-4eef-b0e3-755f8f256725:autoScalingGroupName/terraform-2024041601151220070000000b:policyName/scale-out-policy" [90m-> null[0m[0m
      [31m-[0m[0m autoscaling_group_name    = "terraform-2024041601151220070000000b" [90m-> null[0m[0m
      [31m-[0m[0m cooldown                  = 120 [90m-> null[0m[0m
      [31m-[0m[0m enabled                   = true [90m-> null[0m[0m
      [31m-[0m[0m estimated_instance_warmup = 0 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "scale-out-policy" [90m-> null[0m[0m
      [31m-[0m[0m min_adjustment_magnitude  = 0 [90m-> null[0m[0m
      [31m-[0m[0m name                      = "scale-out-policy" [90m-> null[0m[0m
      [31m-[0m[0m policy_type               = "SimpleScaling" [90m-> null[0m[0m
      [31m-[0m[0m scaling_adjustment        = 1 [90m-> null[0m[0m
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_in[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_in" {
      [31m-[0m[0m actions_enabled           = true [90m-> null[0m[0m
      [31m-[0m[0m alarm_actions             = [
          [31m-[0m[0m "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:654bdb88-23e1-455d-be1b-5ebda2cb7e1c:autoScalingGroupName/terraform-2024041602033750440000000b:policyName/scale-in-policy",
        ] [90m-> null[0m[0m
      [31m-[0m[0m alarm_description         = "Monitors Request Count for Wordpress ASG" [90m-> null[0m[0m
      [31m-[0m[0m alarm_name                = "wordpress_scale_down" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:cloudwatch:ap-southeast-2:851725468631:alarm:wordpress_scale_down" [90m-> null[0m[0m
      [31m-[0m[0m comparison_operator       = "LessThanOrEqualToThreshold" [90m-> null[0m[0m
      [31m-[0m[0m datapoints_to_alarm       = 0 [90m-> null[0m[0m
      [31m-[0m[0m dimensions                = {
          [31m-[0m[0m "AutoScalingGroupName" = "terraform-2024041602033750440000000b"
        } [90m-> null[0m[0m
      [31m-[0m[0m evaluation_periods        = 2 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "wordpress_scale_down" [90m-> null[0m[0m
      [31m-[0m[0m insufficient_data_actions = [] [90m-> null[0m[0m
      [31m-[0m[0m metric_name               = "RequestCountPerTarget" [90m-> null[0m[0m
      [31m-[0m[0m namespace                 = "AWS/EC2" [90m-> null[0m[0m
      [31m-[0m[0m ok_actions                = [] [90m-> null[0m[0m
      [31m-[0m[0m period                    = 10 [90m-> null[0m[0m
      [31m-[0m[0m statistic                 = "Sum" [90m-> null[0m[0m
      [31m-[0m[0m tags                      = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all                  = {} [90m-> null[0m[0m
      [31m-[0m[0m threshold                 = 5 [90m-> null[0m[0m
      [31m-[0m[0m treat_missing_data        = "missing" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_cloudwatch_metric_alarm.scale_out[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_cloudwatch_metric_alarm" "scale_out" {
      [31m-[0m[0m actions_enabled           = true [90m-> null[0m[0m
      [31m-[0m[0m alarm_actions             = [
          [31m-[0m[0m "arn:aws:autoscaling:ap-southeast-2:851725468631:scalingPolicy:6f1b8fef-b6e2-42e7-b231-c6fa8ad74c28:autoScalingGroupName/terraform-2024041602033750440000000b:policyName/scale-out-policy",
        ] [90m-> null[0m[0m
      [31m-[0m[0m alarm_description         = "Monitors Request Count for Wordpress ASG" [90m-> null[0m[0m
      [31m-[0m[0m alarm_name                = "wordpress_scale_up" [90m-> null[0m[0m
      [31m-[0m[0m arn                       = "arn:aws:cloudwatch:ap-southeast-2:851725468631:alarm:wordpress_scale_up" [90m-> null[0m[0m
      [31m-[0m[0m comparison_operator       = "GreaterThanOrEqualToThreshold" [90m-> null[0m[0m
      [31m-[0m[0m datapoints_to_alarm       = 0 [90m-> null[0m[0m
      [31m-[0m[0m dimensions                = {
          [31m-[0m[0m "AutoScalingGroupName" = "terraform-2024041602033750440000000b"
        } [90m-> null[0m[0m
      [31m-[0m[0m evaluation_periods        = 2 [90m-> null[0m[0m
      [31m-[0m[0m id                        = "wordpress_scale_up" [90m-> null[0m[0m
      [31m-[0m[0m insufficient_data_actions = [] [90m-> null[0m[0m
      [31m-[0m[0m metric_name               = "RequestCountPerTarget" [90m-> null[0m[0m
      [31m-[0m[0m namespace                 = "AWS/EC2" [90m-> null[0m[0m
      [31m-[0m[0m ok_actions                = [] [90m-> null[0m[0m
      [31m-[0m[0m period                    = 10 [90m-> null[0m[0m
      [31m-[0m[0m statistic                 = "Sum" [90m-> null[0m[0m
      [31m-[0m[0m tags                      = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all                  = {} [90m-> null[0m[0m
      [31m-[0m[0m threshold                 = 10 [90m-> null[0m[0m
      [31m-[0m[0m treat_missing_data        = "missing" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_db_instance.wordpress_db[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_db_instance" "wordpress_db" {
      [31m-[0m[0m address                               = "wordpress-testnew.cdiegci4gw5z.ap-southeast-2.rds.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m allocated_storage                     = 20 [90m-> null[0m[0m
      [31m-[0m[0m apply_immediately                     = false [90m-> null[0m[0m
      [31m-[0m[0m arn                                   = "arn:aws:rds:ap-southeast-2:851725468631:db:wordpress-testnew" [90m-> null[0m[0m
      [31m-[0m[0m auto_minor_version_upgrade            = true [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                     = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m backup_retention_period               = 0 [90m-> null[0m[0m
      [31m-[0m[0m backup_target                         = "region" [90m-> null[0m[0m
      [31m-[0m[0m backup_window                         = "13:23-13:53" [90m-> null[0m[0m
      [31m-[0m[0m ca_cert_identifier                    = "rds-ca-rsa2048-g1" [90m-> null[0m[0m
      [31m-[0m[0m copy_tags_to_snapshot                 = false [90m-> null[0m[0m
      [31m-[0m[0m customer_owned_ip_enabled             = false [90m-> null[0m[0m
      [31m-[0m[0m db_name                               = "wordpress" [90m-> null[0m[0m
      [31m-[0m[0m db_subnet_group_name                  = "db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m delete_automated_backups              = true [90m-> null[0m[0m
      [31m-[0m[0m deletion_protection                   = false [90m-> null[0m[0m
      [31m-[0m[0m domain_dns_ips                        = [] [90m-> null[0m[0m
      [31m-[0m[0m enabled_cloudwatch_logs_exports       = [] [90m-> null[0m[0m
      [31m-[0m[0m endpoint                              = "wordpress-testnew.cdiegci4gw5z.ap-southeast-2.rds.amazonaws.com:3306" [90m-> null[0m[0m
      [31m-[0m[0m engine                                = "mariadb" [90m-> null[0m[0m
      [31m-[0m[0m engine_version                        = "10.11.5" [90m-> null[0m[0m
      [31m-[0m[0m engine_version_actual                 = "10.11.5" [90m-> null[0m[0m
      [31m-[0m[0m hosted_zone_id                        = "Z32T0VRHXEXS0V" [90m-> null[0m[0m
      [31m-[0m[0m iam_database_authentication_enabled   = false [90m-> null[0m[0m
      [31m-[0m[0m id                                    = "db-OAHO7L7FD3J7O6BIBPYVGR26AA" [90m-> null[0m[0m
      [31m-[0m[0m identifier                            = "wordpress-testnew" [90m-> null[0m[0m
      [31m-[0m[0m instance_class                        = "db.t3.micro" [90m-> null[0m[0m
      [31m-[0m[0m iops                                  = 3000 [90m-> null[0m[0m
      [31m-[0m[0m license_model                         = "general-public-license" [90m-> null[0m[0m
      [31m-[0m[0m listener_endpoint                     = [] [90m-> null[0m[0m
      [31m-[0m[0m maintenance_window                    = "tue:17:57-tue:18:27" [90m-> null[0m[0m
      [31m-[0m[0m master_user_secret                    = [] [90m-> null[0m[0m
      [31m-[0m[0m max_allocated_storage                 = 0 [90m-> null[0m[0m
      [31m-[0m[0m monitoring_interval                   = 0 [90m-> null[0m[0m
      [31m-[0m[0m multi_az                              = true [90m-> null[0m[0m
      [31m-[0m[0m network_type                          = "IPV4" [90m-> null[0m[0m
      [31m-[0m[0m option_group_name                     = "default:mariadb-10-11" [90m-> null[0m[0m
      [31m-[0m[0m parameter_group_name                  = "default.mariadb10.11" [90m-> null[0m[0m
      [31m-[0m[0m password                              = (sensitive value) [90m-> null[0m[0m
      [31m-[0m[0m performance_insights_enabled          = false [90m-> null[0m[0m
      [31m-[0m[0m performance_insights_retention_period = 0 [90m-> null[0m[0m
      [31m-[0m[0m port                                  = 3306 [90m-> null[0m[0m
      [31m-[0m[0m publicly_accessible                   = false [90m-> null[0m[0m
      [31m-[0m[0m replicas                              = [] [90m-> null[0m[0m
      [31m-[0m[0m resource_id                           = "db-OAHO7L7FD3J7O6BIBPYVGR26AA" [90m-> null[0m[0m
      [31m-[0m[0m skip_final_snapshot                   = true [90m-> null[0m[0m
      [31m-[0m[0m status                                = "available" [90m-> null[0m[0m
      [31m-[0m[0m storage_encrypted                     = false [90m-> null[0m[0m
      [31m-[0m[0m storage_throughput                    = 125 [90m-> null[0m[0m
      [31m-[0m[0m storage_type                          = "gp3" [90m-> null[0m[0m
      [31m-[0m[0m tags                                  = {
          [31m-[0m[0m "Name" = "WordPress DB - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                              = {
          [31m-[0m[0m "Name" = "WordPress DB - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m username                              = "wordpressuser" [90m-> null[0m[0m
      [31m-[0m[0m vpc_security_group_ids                = [
          [31m-[0m[0m "sg-0067b76ba2eab1f16",
        ] [90m-> null[0m[0m
    }

[1m  # module.instances.aws_db_subnet_group.db-subnet[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_db_subnet_group" "db-subnet" {
      [31m-[0m[0m arn                     = "arn:aws:rds:ap-southeast-2:851725468631:subgrp:db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m description             = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m id                      = "db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m name                    = "db subnet group - testnew" [90m-> null[0m[0m
      [31m-[0m[0m subnet_ids              = [
          [31m-[0m[0m "subnet-00293d745b25416ec",
          [31m-[0m[0m "subnet-0744cbc0e0a099eb1",
          [31m-[0m[0m "subnet-0ed054c4ecdc2ae29",
        ] [90m-> null[0m[0m
      [31m-[0m[0m supported_network_types = [
          [31m-[0m[0m "IPV4",
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags                    = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all                = {} [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                  = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_efs_backup_policy.policy[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_backup_policy" "policy" {
      [31m-[0m[0m file_system_id = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m id             = "fs-048996c9210948b78" [90m-> null[0m[0m

      [31m-[0m[0m backup_policy {
          [31m-[0m[0m status = "DISABLED" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_efs_file_system.wordpress_efs[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_file_system" "wordpress_efs" {
      [31m-[0m[0m arn                             = "arn:aws:elasticfilesystem:ap-southeast-2:851725468631:file-system/fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m creation_token                  = "wordpress-efs-testnew" [90m-> null[0m[0m
      [31m-[0m[0m dns_name                        = "fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m encrypted                       = false [90m-> null[0m[0m
      [31m-[0m[0m id                              = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m name                            = "WordPressEFS-testnew" [90m-> null[0m[0m
      [31m-[0m[0m number_of_mount_targets         = 2 [90m-> null[0m[0m
      [31m-[0m[0m owner_id                        = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m performance_mode                = "generalPurpose" [90m-> null[0m[0m
      [31m-[0m[0m provisioned_throughput_in_mibps = 0 [90m-> null[0m[0m
      [31m-[0m[0m size_in_bytes                   = [
          [31m-[0m[0m {
              [31m-[0m[0m value             = 85610496
              [31m-[0m[0m value_in_ia       = 0
              [31m-[0m[0m value_in_standard = 85610496
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags                            = {
          [31m-[0m[0m "Name" = "WordPressEFS-testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                        = {
          [31m-[0m[0m "Name" = "WordPressEFS-testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m throughput_mode                 = "bursting" [90m-> null[0m[0m

      [31m-[0m[0m protection {
          [31m-[0m[0m replication_overwrite = "ENABLED" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [31m-[0m[0m availability_zone_id   = "apse2-az3" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_name = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m dns_name               = "fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m file_system_arn        = "arn:aws:elasticfilesystem:ap-southeast-2:851725468631:file-system/fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m file_system_id         = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m id                     = "fsmt-073863d602119d372" [90m-> null[0m[0m
      [31m-[0m[0m ip_address             = "10.0.3.236" [90m-> null[0m[0m
      [31m-[0m[0m mount_target_dns_name  = "ap-southeast-2a.fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m network_interface_id   = "eni-0ad24d7569c01aad9" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m security_groups        = [
          [31m-[0m[0m "sg-0ec1248523077e3de",
        ] [90m-> null[0m[0m
      [31m-[0m[0m subnet_id              = "subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_efs_mount_target.wordpress_mount_target[1][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_efs_mount_target" "wordpress_mount_target" {
      [31m-[0m[0m availability_zone_id   = "apse2-az1" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_name = "ap-southeast-2b" [90m-> null[0m[0m
      [31m-[0m[0m dns_name               = "fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m file_system_arn        = "arn:aws:elasticfilesystem:ap-southeast-2:851725468631:file-system/fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m file_system_id         = "fs-048996c9210948b78" [90m-> null[0m[0m
      [31m-[0m[0m id                     = "fsmt-0880dec6726504c3c" [90m-> null[0m[0m
      [31m-[0m[0m ip_address             = "10.0.4.240" [90m-> null[0m[0m
      [31m-[0m[0m mount_target_dns_name  = "ap-southeast-2b.fs-048996c9210948b78.efs.ap-southeast-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m network_interface_id   = "eni-034f10518cf8c4e17" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m security_groups        = [
          [31m-[0m[0m "sg-0ec1248523077e3de",
        ] [90m-> null[0m[0m
      [31m-[0m[0m subnet_id              = "subnet-00293d745b25416ec" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_instance.bastion[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_instance" "bastion" {
      [31m-[0m[0m ami                                  = "ami-0df5c32c4d4710802" [90m-> null[0m[0m
      [31m-[0m[0m arn                                  = "arn:aws:ec2:ap-southeast-2:851725468631:instance/i-00ad5f8056bafb54f" [90m-> null[0m[0m
      [31m-[0m[0m associate_public_ip_address          = true [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                    = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m cpu_core_count                       = 1 [90m-> null[0m[0m
      [31m-[0m[0m cpu_threads_per_core                 = 1 [90m-> null[0m[0m
      [31m-[0m[0m disable_api_stop                     = false [90m-> null[0m[0m
      [31m-[0m[0m disable_api_termination              = false [90m-> null[0m[0m
      [31m-[0m[0m ebs_optimized                        = false [90m-> null[0m[0m
      [31m-[0m[0m get_password_data                    = false [90m-> null[0m[0m
      [31m-[0m[0m hibernation                          = false [90m-> null[0m[0m
      [31m-[0m[0m id                                   = "i-00ad5f8056bafb54f" [90m-> null[0m[0m
      [31m-[0m[0m instance_initiated_shutdown_behavior = "stop" [90m-> null[0m[0m
      [31m-[0m[0m instance_state                       = "running" [90m-> null[0m[0m
      [31m-[0m[0m instance_type                        = "t2.micro" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_address_count                   = 0 [90m-> null[0m[0m
      [31m-[0m[0m ipv6_addresses                       = [] [90m-> null[0m[0m
      [31m-[0m[0m key_name                             = "bastion-key" [90m-> null[0m[0m
      [31m-[0m[0m monitoring                           = true [90m-> null[0m[0m
      [31m-[0m[0m placement_partition_number           = 0 [90m-> null[0m[0m
      [31m-[0m[0m primary_network_interface_id         = "eni-03a84e579707a88e7" [90m-> null[0m[0m
      [31m-[0m[0m private_dns                          = "ip-10-0-1-243.ap-southeast-2.compute.internal" [90m-> null[0m[0m
      [31m-[0m[0m private_ip                           = "10.0.1.243" [90m-> null[0m[0m
      [31m-[0m[0m public_dns                           = "ec2-54-252-212-107.ap-southeast-2.compute.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m public_ip                            = "54.252.212.107" [90m-> null[0m[0m
      [31m-[0m[0m secondary_private_ips                = [] [90m-> null[0m[0m
      [31m-[0m[0m security_groups                      = [] [90m-> null[0m[0m
      [31m-[0m[0m source_dest_check                    = true [90m-> null[0m[0m
      [31m-[0m[0m subnet_id                            = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m tags                                 = {
          [31m-[0m[0m "Name" = "Bastion Instance - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                             = {
          [31m-[0m[0m "Name" = "Bastion Instance - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tenancy                              = "default" [90m-> null[0m[0m
      [31m-[0m[0m user_data                            = "d4827bb603446e2dea242c7d9e28fb8e21bb024b" [90m-> null[0m[0m
      [31m-[0m[0m user_data_replace_on_change          = false [90m-> null[0m[0m
      [31m-[0m[0m vpc_security_group_ids               = [
          [31m-[0m[0m "sg-096365d38e08173e9",
        ] [90m-> null[0m[0m

      [31m-[0m[0m capacity_reservation_specification {
          [31m-[0m[0m capacity_reservation_preference = "open" [90m-> null[0m[0m
        }

      [31m-[0m[0m cpu_options {
          [31m-[0m[0m core_count       = 1 [90m-> null[0m[0m
          [31m-[0m[0m threads_per_core = 1 [90m-> null[0m[0m
        }

      [31m-[0m[0m credit_specification {
          [31m-[0m[0m cpu_credits = "standard" [90m-> null[0m[0m
        }

      [31m-[0m[0m enclave_options {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
        }

      [31m-[0m[0m maintenance_options {
          [31m-[0m[0m auto_recovery = "default" [90m-> null[0m[0m
        }

      [31m-[0m[0m metadata_options {
          [31m-[0m[0m http_endpoint               = "enabled" [90m-> null[0m[0m
          [31m-[0m[0m http_protocol_ipv6          = "disabled" [90m-> null[0m[0m
          [31m-[0m[0m http_put_response_hop_limit = 1 [90m-> null[0m[0m
          [31m-[0m[0m http_tokens                 = "optional" [90m-> null[0m[0m
          [31m-[0m[0m instance_metadata_tags      = "disabled" [90m-> null[0m[0m
        }

      [31m-[0m[0m private_dns_name_options {
          [31m-[0m[0m enable_resource_name_dns_a_record    = false [90m-> null[0m[0m
          [31m-[0m[0m enable_resource_name_dns_aaaa_record = false [90m-> null[0m[0m
          [31m-[0m[0m hostname_type                        = "ip-name" [90m-> null[0m[0m
        }

      [31m-[0m[0m root_block_device {
          [31m-[0m[0m delete_on_termination = true [90m-> null[0m[0m
          [31m-[0m[0m device_name           = "/dev/xvda" [90m-> null[0m[0m
          [31m-[0m[0m encrypted             = false [90m-> null[0m[0m
          [31m-[0m[0m iops                  = 100 [90m-> null[0m[0m
          [31m-[0m[0m tags                  = {} [90m-> null[0m[0m
          [31m-[0m[0m tags_all              = {} [90m-> null[0m[0m
          [31m-[0m[0m throughput            = 0 [90m-> null[0m[0m
          [31m-[0m[0m volume_id             = "vol-033105f3864cdd8d0" [90m-> null[0m[0m
          [31m-[0m[0m volume_size           = 8 [90m-> null[0m[0m
          [31m-[0m[0m volume_type           = "gp2" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_launch_configuration.wordpress_lc[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_launch_configuration" "wordpress_lc" {
      [31m-[0m[0m arn                         = "arn:aws:autoscaling:ap-southeast-2:851725468631:launchConfiguration:f631c8ff-ce7e-460c-80a1-5e087b694604:launchConfigurationName/terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m associate_public_ip_address = true [90m-> null[0m[0m
      [31m-[0m[0m ebs_optimized               = false [90m-> null[0m[0m
      [31m-[0m[0m enable_monitoring           = true [90m-> null[0m[0m
      [31m-[0m[0m id                          = "terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m image_id                    = "ami-0df5c32c4d4710802" [90m-> null[0m[0m
      [31m-[0m[0m instance_type               = "t2.micro" [90m-> null[0m[0m
      [31m-[0m[0m name                        = "terraform-2024041601151000870000000a" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix                 = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m security_groups             = [
          [31m-[0m[0m "sg-0dad9a075161f1c72",
        ] [90m-> null[0m[0m
      [31m-[0m[0m user_data                   = "88af2c7ea53651f5c051b0b4ad11dae6396abbde" [90m-> null[0m[0m
    }

[1m  # module.instances.aws_lb.wordpress_lb[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_lb" "wordpress_lb" {
      [31m-[0m[0m arn                                         = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m arn_suffix                                  = "app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m desync_mitigation_mode                      = "defensive" [90m-> null[0m[0m
      [31m-[0m[0m dns_name                                    = "wordpress-lb-testnew-310685834.ap-southeast-2.elb.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m drop_invalid_header_fields                  = false [90m-> null[0m[0m
      [31m-[0m[0m enable_cross_zone_load_balancing            = true [90m-> null[0m[0m
      [31m-[0m[0m enable_deletion_protection                  = false [90m-> null[0m[0m
      [31m-[0m[0m enable_http2                                = true [90m-> null[0m[0m
      [31m-[0m[0m enable_tls_version_and_cipher_suite_headers = false [90m-> null[0m[0m
      [31m-[0m[0m enable_waf_fail_open                        = false [90m-> null[0m[0m
      [31m-[0m[0m enable_xff_client_port                      = false [90m-> null[0m[0m
      [31m-[0m[0m id                                          = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m idle_timeout                                = 60 [90m-> null[0m[0m
      [31m-[0m[0m internal                                    = false [90m-> null[0m[0m
      [31m-[0m[0m ip_address_type                             = "ipv4" [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_type                          = "application" [90m-> null[0m[0m
      [31m-[0m[0m name                                        = "wordpress-lb-testnew" [90m-> null[0m[0m
      [31m-[0m[0m preserve_host_header                        = false [90m-> null[0m[0m
      [31m-[0m[0m security_groups                             = [
          [31m-[0m[0m "sg-0fea3842e48e1897d",
        ] [90m-> null[0m[0m
      [31m-[0m[0m subnets                                     = [
          [31m-[0m[0m "subnet-032b9e24f96ee2ffb",
          [31m-[0m[0m "subnet-053f4b13f4d145ce5",
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags                                        = {
          [31m-[0m[0m "Name" = "Application Load Balancer - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                    = {
          [31m-[0m[0m "Name" = "Application Load Balancer - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                      = "vpc-020ae876256aed30a" [90m-> null[0m[0m
      [31m-[0m[0m xff_header_processing_mode                  = "append" [90m-> null[0m[0m
      [31m-[0m[0m zone_id                                     = "Z1GM3OXH4ZPM65" [90m-> null[0m[0m

      [31m-[0m[0m access_logs {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
        }

      [31m-[0m[0m connection_logs {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
        }

      [31m-[0m[0m subnet_mapping {
          [31m-[0m[0m subnet_id = "subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
        }
      [31m-[0m[0m subnet_mapping {
          [31m-[0m[0m subnet_id = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_lb_listener.wordpress_listener[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_lb_listener" "wordpress_listener" {
      [31m-[0m[0m arn               = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd" [90m-> null[0m[0m
      [31m-[0m[0m id                = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd" [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_arn = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05" [90m-> null[0m[0m
      [31m-[0m[0m port              = 80 [90m-> null[0m[0m
      [31m-[0m[0m protocol          = "HTTP" [90m-> null[0m[0m
      [31m-[0m[0m tags              = {
          [31m-[0m[0m "Name" = "Listener for LB - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all          = {
          [31m-[0m[0m "Name" = "Listener for LB - testnew"
        } [90m-> null[0m[0m

      [31m-[0m[0m default_action {
          [31m-[0m[0m order            = 1 [90m-> null[0m[0m
          [31m-[0m[0m target_group_arn = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
          [31m-[0m[0m type             = "forward" [90m-> null[0m[0m
        }
    }

[1m  # module.instances.aws_lb_target_group.wordpress_tg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_lb_target_group" "wordpress_tg" {
      [31m-[0m[0m arn                                = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
      [31m-[0m[0m arn_suffix                         = "targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
      [31m-[0m[0m deregistration_delay               = "300" [90m-> null[0m[0m
      [31m-[0m[0m id                                 = "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b" [90m-> null[0m[0m
      [31m-[0m[0m ip_address_type                    = "ipv4" [90m-> null[0m[0m
      [31m-[0m[0m lambda_multi_value_headers_enabled = false [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_arns                 = [
          [31m-[0m[0m "arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05",
        ] [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_algorithm_type      = "round_robin" [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_anomaly_mitigation  = "off" [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_cross_zone_enabled  = "use_load_balancer_configuration" [90m-> null[0m[0m
      [31m-[0m[0m name                               = "wordpress-tg-testnew" [90m-> null[0m[0m
      [31m-[0m[0m port                               = 80 [90m-> null[0m[0m
      [31m-[0m[0m protocol                           = "HTTP" [90m-> null[0m[0m
      [31m-[0m[0m protocol_version                   = "HTTP1" [90m-> null[0m[0m
      [31m-[0m[0m proxy_protocol_v2                  = false [90m-> null[0m[0m
      [31m-[0m[0m slow_start                         = 0 [90m-> null[0m[0m
      [31m-[0m[0m tags                               = {
          [31m-[0m[0m "Name" = "Target Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                           = {
          [31m-[0m[0m "Name" = "Target Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m target_type                        = "instance" [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                             = "vpc-020ae876256aed30a" [90m-> null[0m[0m

      [31m-[0m[0m health_check {
          [31m-[0m[0m enabled             = true [90m-> null[0m[0m
          [31m-[0m[0m healthy_threshold   = 2 [90m-> null[0m[0m
          [31m-[0m[0m interval            = 25 [90m-> null[0m[0m
          [31m-[0m[0m matcher             = "200,301" [90m-> null[0m[0m
          [31m-[0m[0m path                = "/wordpress" [90m-> null[0m[0m
          [31m-[0m[0m port                = "80" [90m-> null[0m[0m
          [31m-[0m[0m protocol            = "HTTP" [90m-> null[0m[0m
          [31m-[0m[0m timeout             = 20 [90m-> null[0m[0m
          [31m-[0m[0m unhealthy_threshold = 2 [90m-> null[0m[0m
        }

      [31m-[0m[0m stickiness {
          [31m-[0m[0m cookie_duration = 86400 [90m-> null[0m[0m
          [31m-[0m[0m enabled         = false [90m-> null[0m[0m
          [31m-[0m[0m type            = "lb_cookie" [90m-> null[0m[0m
        }

      [31m-[0m[0m target_failover {}

      [31m-[0m[0m target_health_state {}
    }

[1m  # module.networking.aws_eip.nat_eip[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_eip" "nat_eip" {
      [31m-[0m[0m allocation_id        = "eipalloc-0c0b778fe697b8c27" [90m-> null[0m[0m
      [31m-[0m[0m association_id       = "eipassoc-0da3eeedad3332ce6" [90m-> null[0m[0m
      [31m-[0m[0m domain               = "vpc" [90m-> null[0m[0m
      [31m-[0m[0m id                   = "eipalloc-0c0b778fe697b8c27" [90m-> null[0m[0m
      [31m-[0m[0m network_border_group = "ap-southeast-2" [90m-> null[0m[0m
      [31m-[0m[0m network_interface    = "eni-062f60430213b91ed" [90m-> null[0m[0m
      [31m-[0m[0m private_dns          = "ip-10-0-1-222.ap-southeast-2.compute.internal" [90m-> null[0m[0m
      [31m-[0m[0m private_ip           = "10.0.1.222" [90m-> null[0m[0m
      [31m-[0m[0m public_dns           = "ec2-54-206-42-82.ap-southeast-2.compute.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m public_ip            = "54.206.42.82" [90m-> null[0m[0m
      [31m-[0m[0m public_ipv4_pool     = "amazon" [90m-> null[0m[0m
      [31m-[0m[0m tags                 = {} [90m-> null[0m[0m
      [31m-[0m[0m tags_all             = {} [90m-> null[0m[0m
      [31m-[0m[0m vpc                  = true [90m-> null[0m[0m
    }

[1m  # module.networking.aws_internet_gateway.gw[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_internet_gateway" "gw" {
      [31m-[0m[0m arn      = "arn:aws:ec2:ap-southeast-2:851725468631:internet-gateway/igw-03f02111f9c0594be" [90m-> null[0m[0m
      [31m-[0m[0m id       = "igw-03f02111f9c0594be" [90m-> null[0m[0m
      [31m-[0m[0m owner_id = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m tags     = {
          [31m-[0m[0m "Name" = "Internet Gateway"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all = {
          [31m-[0m[0m "Name" = "Internet Gateway"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id   = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_nat_gateway.nat_gateway[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_nat_gateway" "nat_gateway" {
      [31m-[0m[0m allocation_id                      = "eipalloc-0c0b778fe697b8c27" [90m-> null[0m[0m
      [31m-[0m[0m association_id                     = "eipassoc-0da3eeedad3332ce6" [90m-> null[0m[0m
      [31m-[0m[0m connectivity_type                  = "public" [90m-> null[0m[0m
      [31m-[0m[0m id                                 = "nat-020a6f83525b5963e" [90m-> null[0m[0m
      [31m-[0m[0m network_interface_id               = "eni-062f60430213b91ed" [90m-> null[0m[0m
      [31m-[0m[0m private_ip                         = "10.0.1.222" [90m-> null[0m[0m
      [31m-[0m[0m public_ip                          = "54.206.42.82" [90m-> null[0m[0m
      [31m-[0m[0m secondary_allocation_ids           = [] [90m-> null[0m[0m
      [31m-[0m[0m secondary_private_ip_address_count = 0 [90m-> null[0m[0m
      [31m-[0m[0m secondary_private_ip_addresses     = [] [90m-> null[0m[0m
      [31m-[0m[0m subnet_id                          = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m tags                               = {
          [31m-[0m[0m "Name" = "NAT Gateway"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                           = {
          [31m-[0m[0m "Name" = "NAT Gateway"
        } [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table.private_route[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table" "private_route" {
      [31m-[0m[0m arn              = "arn:aws:ec2:ap-southeast-2:851725468631:route-table/rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m id               = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m owner_id         = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m propagating_vgws = [] [90m-> null[0m[0m
      [31m-[0m[0m route            = [
          [31m-[0m[0m {
              [31m-[0m[0m carrier_gateway_id         = ""
              [31m-[0m[0m cidr_block                 = "0.0.0.0/0"
              [31m-[0m[0m core_network_arn           = ""
              [31m-[0m[0m destination_prefix_list_id = ""
              [31m-[0m[0m egress_only_gateway_id     = ""
              [31m-[0m[0m gateway_id                 = ""
              [31m-[0m[0m ipv6_cidr_block            = ""
              [31m-[0m[0m local_gateway_id           = ""
              [31m-[0m[0m nat_gateway_id             = "nat-020a6f83525b5963e"
              [31m-[0m[0m network_interface_id       = ""
              [31m-[0m[0m transit_gateway_id         = ""
              [31m-[0m[0m vpc_endpoint_id            = ""
              [31m-[0m[0m vpc_peering_connection_id  = ""
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "Name" = "Private Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "Name" = "Private Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id           = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table.public_route[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table" "public_route" {
      [31m-[0m[0m arn              = "arn:aws:ec2:ap-southeast-2:851725468631:route-table/rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m id               = "rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m owner_id         = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m propagating_vgws = [] [90m-> null[0m[0m
      [31m-[0m[0m route            = [
          [31m-[0m[0m {
              [31m-[0m[0m carrier_gateway_id         = ""
              [31m-[0m[0m cidr_block                 = "0.0.0.0/0"
              [31m-[0m[0m core_network_arn           = ""
              [31m-[0m[0m destination_prefix_list_id = ""
              [31m-[0m[0m egress_only_gateway_id     = ""
              [31m-[0m[0m gateway_id                 = "igw-03f02111f9c0594be"
              [31m-[0m[0m ipv6_cidr_block            = ""
              [31m-[0m[0m local_gateway_id           = ""
              [31m-[0m[0m nat_gateway_id             = ""
              [31m-[0m[0m network_interface_id       = ""
              [31m-[0m[0m transit_gateway_id         = ""
              [31m-[0m[0m vpc_endpoint_id            = ""
              [31m-[0m[0m vpc_peering_connection_id  = ""
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "Name" = "Public Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "Name" = "Public Route Table"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id           = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.private_subnet_1_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "private_subnet_1_association" {
      [31m-[0m[0m id             = "rtbassoc-08db27a44c523b48f" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.private_subnet_2_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "private_subnet_2_association" {
      [31m-[0m[0m id             = "rtbassoc-0993f3ba72e8ba85b" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-00293d745b25416ec" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.private_subnet_3_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "private_subnet_3_association" {
      [31m-[0m[0m id             = "rtbassoc-0621cdcbf7816190c" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0890e78710b09d10d" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-0ed054c4ecdc2ae29" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.public_subnet_1_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "public_subnet_1_association" {
      [31m-[0m[0m id             = "rtbassoc-0586c4e54e7118c8b" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_route_table_association.public_subnet_2_association[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_route_table_association" "public_subnet_2_association" {
      [31m-[0m[0m id             = "rtbassoc-068f4c37fef3c3aca" [90m-> null[0m[0m
      [31m-[0m[0m route_table_id = "rtb-0afab117c26a63c55" [90m-> null[0m[0m
      [31m-[0m[0m subnet_id      = "subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.private_subnet_1[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "private_subnet_1" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az3" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.3.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-0744cbc0e0a099eb1" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Private Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Private Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.private_subnet_2[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "private_subnet_2" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-00293d745b25416ec" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2b" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az1" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.4.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-00293d745b25416ec" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Private Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Private Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.private_subnet_3[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "private_subnet_3" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-0ed054c4ecdc2ae29" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2c" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az2" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.5.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-0ed054c4ecdc2ae29" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Private Subnet 3 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Private Subnet 3 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.public_subnet_1[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "public_subnet_1" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2a" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az3" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.1.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-053f4b13f4d145ce5" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Public Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Public Subnet 1 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_subnet.public_subnet_2[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_subnet" "public_subnet_2" {
      [31m-[0m[0m arn                                            = "arn:aws:ec2:ap-southeast-2:851725468631:subnet/subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
      [31m-[0m[0m assign_ipv6_address_on_creation                = false [90m-> null[0m[0m
      [31m-[0m[0m availability_zone                              = "ap-southeast-2b" [90m-> null[0m[0m
      [31m-[0m[0m availability_zone_id                           = "apse2-az1" [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                                     = "10.0.2.0/24" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns64                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_lni_at_device_index                     = 0 [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_a_record_on_launch    = false [90m-> null[0m[0m
      [31m-[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false [90m-> null[0m[0m
      [31m-[0m[0m id                                             = "subnet-032b9e24f96ee2ffb" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_native                                    = false [90m-> null[0m[0m
      [31m-[0m[0m map_customer_owned_ip_on_launch                = false [90m-> null[0m[0m
      [31m-[0m[0m map_public_ip_on_launch                        = false [90m-> null[0m[0m
      [31m-[0m[0m owner_id                                       = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m private_dns_hostname_type_on_launch            = "ip-name" [90m-> null[0m[0m
      [31m-[0m[0m tags                                           = {
          [31m-[0m[0m "Name" = "Public Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                       = {
          [31m-[0m[0m "Name" = "Public Subnet 2 - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                         = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.networking.aws_vpc.main[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_vpc" "main" {
      [31m-[0m[0m arn                                  = "arn:aws:ec2:ap-southeast-2:851725468631:vpc/vpc-020ae876256aed30a" [90m-> null[0m[0m
      [31m-[0m[0m assign_generated_ipv6_cidr_block     = false [90m-> null[0m[0m
      [31m-[0m[0m cidr_block                           = "10.0.0.0/16" [90m-> null[0m[0m
      [31m-[0m[0m default_network_acl_id               = "acl-09a94d9f88365203c" [90m-> null[0m[0m
      [31m-[0m[0m default_route_table_id               = "rtb-01b2738e2ee2436ad" [90m-> null[0m[0m
      [31m-[0m[0m default_security_group_id            = "sg-03436f6c3394731e6" [90m-> null[0m[0m
      [31m-[0m[0m dhcp_options_id                      = "dopt-005e63162c413eb8e" [90m-> null[0m[0m
      [31m-[0m[0m enable_dns_hostnames                 = true [90m-> null[0m[0m
      [31m-[0m[0m enable_dns_support                   = true [90m-> null[0m[0m
      [31m-[0m[0m enable_network_address_usage_metrics = false [90m-> null[0m[0m
      [31m-[0m[0m id                                   = "vpc-020ae876256aed30a" [90m-> null[0m[0m
      [31m-[0m[0m instance_tenancy                     = "default" [90m-> null[0m[0m
      [31m-[0m[0m ipv6_netmask_length                  = 0 [90m-> null[0m[0m
      [31m-[0m[0m main_route_table_id                  = "rtb-01b2738e2ee2436ad" [90m-> null[0m[0m
      [31m-[0m[0m owner_id                             = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m tags                                 = {
          [31m-[0m[0m "Name" = "testnew-VPC"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                             = {
          [31m-[0m[0m "Name" = "testnew-VPC"
        } [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.bastion_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "bastion_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-096365d38e08173e9" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-096365d38e08173e9" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 22
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 22
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 443
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 443
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 80
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 80
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010258660100000002" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.ec2_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "ec2_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0dad9a075161f1c72" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0dad9a075161f1c72" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 22
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-096365d38e08173e9",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 22
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 443
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-0fea3842e48e1897d",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 443
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 80
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-0fea3842e48e1897d",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 80
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010301092400000005" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "EC2 Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "EC2 Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.efs_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "efs_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0ec1248523077e3de" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0ec1248523077e3de" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 2049
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-0dad9a075161f1c72",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 2049
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010303498500000006" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "EFS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "EFS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.lb_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "lb_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0fea3842e48e1897d" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0fea3842e48e1897d" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 443
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 443
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 80
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 80
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010258660100000001" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "LB Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "LB Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1m  # module.security.aws_security_group.rds_sg[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_security_group" "rds_sg" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:ap-southeast-2:851725468631:security-group/sg-0067b76ba2eab1f16" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Managed by Terraform" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0067b76ba2eab1f16" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 3306
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-096365d38e08173e9",
                  [31m-[0m[0m "sg-0dad9a075161f1c72",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 3306
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = ""
              [31m-[0m[0m from_port        = 5432
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-096365d38e08173e9",
                  [31m-[0m[0m "sg-0dad9a075161f1c72",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 5432
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "terraform-20240416010303510100000007" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix            = "terraform-" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "851725468631" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name" = "RDS Security Group - testnew"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-020ae876256aed30a" [90m-> null[0m[0m
    }

[1mPlan:[0m 0 to add, 0 to change, 37 to destroy.
[0m[0m[1mmodule.networking.aws_route_table_association.public_subnet_1_association: Destroying... [id=rtbassoc-0586c4e54e7118c8b][0m[0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_2_association: Destroying... [id=rtbassoc-068f4c37fef3c3aca][0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_2_association: Destroying... [id=rtbassoc-0993f3ba72e8ba85b][0m[0m
[0m[1mmodule.instances.aws_efs_backup_policy.policy: Destroying... [id=fs-048996c9210948b78][0m[0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_out: Destroying... [id=wordpress_scale_up][0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_3_association: Destroying... [id=rtbassoc-0621cdcbf7816190c][0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_1_association: Destroying... [id=rtbassoc-08db27a44c523b48f][0m[0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_in: Destroying... [id=wordpress_scale_down][0m[0m
[0m[1mmodule.instances.aws_lb_listener.wordpress_listener: Destroying... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:listener/app/wordpress-lb-testnew/7a3f35c78d3f4b05/4b5d4980dfc4d8cd][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Destroying... [id=i-00ad5f8056bafb54f][0m[0m
[0m[1mmodule.instances.aws_efs_backup_policy.policy: Destruction complete after 0s[0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_out: Destruction complete after 0s[0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_out_policy: Destroying... [id=scale-out-policy][0m[0m
[0m[1mmodule.instances.aws_cloudwatch_metric_alarm.scale_in: Destruction complete after 0s[0m
[0m[1mmodule.instances.aws_lb_listener.wordpress_listener: Destruction complete after 0s[0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_in_policy: Destroying... [id=scale-in-policy][0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_2_association: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_3_association: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_2_association: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_route_table_association.public_subnet_1_association: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_route_table.public_route: Destroying... [id=rtb-0afab117c26a63c55][0m[0m
[0m[1mmodule.networking.aws_route_table_association.private_subnet_1_association: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_route_table.private_route: Destroying... [id=rtb-0890e78710b09d10d][0m[0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_out_policy: Destruction complete after 0s[0m
[0m[1mmodule.instances.aws_autoscaling_policy.scale_in_policy: Destruction complete after 0s[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Destroying... [id=terraform-2024041601151220070000000b][0m[0m
[0m[1mmodule.networking.aws_route_table.public_route: Destruction complete after 1s[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Destroying... [id=igw-03f02111f9c0594be][0m[0m
[0m[1mmodule.networking.aws_route_table.private_route: Destruction complete after 1s[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Destroying... [id=nat-020a6f83525b5963e][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Still destroying... [id=i-00ad5f8056bafb54f, 10s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still destroying... [id=terraform-2024041601151220070000000b, 10s elapsed][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 10s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still destroying... [id=nat-020a6f83525b5963e, 10s elapsed][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Still destroying... [id=i-00ad5f8056bafb54f, 20s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still destroying... [id=terraform-2024041601151220070000000b, 20s elapsed][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 20s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still destroying... [id=nat-020a6f83525b5963e, 20s elapsed][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Still destroying... [id=i-00ad5f8056bafb54f, 30s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still destroying... [id=terraform-2024041601151220070000000b, 31s elapsed][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 30s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still destroying... [id=nat-020a6f83525b5963e, 30s elapsed][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Still destroying... [id=i-00ad5f8056bafb54f, 40s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still destroying... [id=terraform-2024041601151220070000000b, 41s elapsed][0m[0m
[0m[1mmodule.instances.aws_instance.bastion: Destruction complete after 41s[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 40s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still destroying... [id=nat-020a6f83525b5963e, 40s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still destroying... [id=terraform-2024041601151220070000000b, 51s elapsed][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 50s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Still destroying... [id=nat-020a6f83525b5963e, 50s elapsed][0m[0m
[0m[1mmodule.networking.aws_nat_gateway.nat_gateway: Destruction complete after 51s[0m
[0m[1mmodule.networking.aws_eip.nat_eip: Destroying... [id=eipalloc-0c0b778fe697b8c27][0m[0m
[0m[1mmodule.networking.aws_eip.nat_eip: Destruction complete after 1s[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still destroying... [id=terraform-2024041601151220070000000b, 1m1s elapsed][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 1m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Still destroying... [id=terraform-2024041601151220070000000b, 1m11s elapsed][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 1m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_autoscaling_group.wordpress_asg: Destruction complete after 1m15s[0m
[0m[1mmodule.instances.aws_lb_target_group.wordpress_tg: Destroying... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:targetgroup/wordpress-tg-testnew/dd7401d29baec02b][0m[0m
[0m[1mmodule.instances.aws_lb_target_group.wordpress_tg: Destruction complete after 0s[0m
[0m[1mmodule.instances.aws_launch_configuration.wordpress_lc: Destroying... [id=terraform-2024041601151000870000000a][0m[0m
[0m[1mmodule.instances.aws_launch_configuration.wordpress_lc: Destruction complete after 1s[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Destroying... [id=fsmt-0880dec6726504c3c][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Destroying... [id=fsmt-073863d602119d372][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Destroying... [id=arn:aws:elasticloadbalancing:ap-southeast-2:851725468631:loadbalancer/app/wordpress-lb-testnew/7a3f35c78d3f4b05][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA][0m[0m
[0m[1mmodule.instances.aws_lb.wordpress_lb: Destruction complete after 1s[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Destroying... [id=subnet-053f4b13f4d145ce5][0m[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_2: Destroying... [id=subnet-032b9e24f96ee2ffb][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 1m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still destroying... [id=fsmt-0880dec6726504c3c, 10s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still destroying... [id=fsmt-073863d602119d372, 10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 10s elapsed][0m[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_2: Destruction complete after 9s[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Still destroying... [id=subnet-053f4b13f4d145ce5, 10s elapsed][0m[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Still destroying... [id=igw-03f02111f9c0594be, 1m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Still destroying... [id=fsmt-0880dec6726504c3c, 20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Still destroying... [id=fsmt-073863d602119d372, 20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 20s elapsed][0m[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Still destroying... [id=subnet-053f4b13f4d145ce5, 20s elapsed][0m[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[1]: Destruction complete after 21s[0m
[0m[1mmodule.instances.aws_efs_mount_target.wordpress_mount_target[0]: Destruction complete after 21s[0m
[0m[1mmodule.instances.aws_efs_file_system.wordpress_efs: Destroying... [id=fs-048996c9210948b78][0m[0m
[0m[1mmodule.security.aws_security_group.efs_sg: Destroying... [id=sg-0ec1248523077e3de][0m[0m
[0m[1mmodule.security.aws_security_group.efs_sg: Destruction complete after 1s[0m
[0m[1mmodule.networking.aws_internet_gateway.gw: Destruction complete after 1m38s[0m
[0m[1mmodule.instances.aws_efs_file_system.wordpress_efs: Destruction complete after 3s[0m
[0m[1mmodule.networking.aws_subnet.public_subnet_1: Destruction complete after 28s[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 1m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 1m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 1m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 1m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 1m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 1m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 2m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 2m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 2m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 2m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 2m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 2m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 3m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 3m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 3m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 3m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 3m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 3m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 4m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 4m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 4m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 4m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 4m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 4m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 5m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 5m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 5m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 5m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 5m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 5m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 6m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 6m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 6m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 6m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 6m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 6m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 7m0s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 7m10s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 7m20s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 7m30s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 7m40s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Still destroying... [id=db-OAHO7L7FD3J7O6BIBPYVGR26AA, 7m50s elapsed][0m[0m
[0m[1mmodule.instances.aws_db_instance.wordpress_db: Destruction complete after 7m57s[0m
[0m[1mmodule.instances.aws_db_subnet_group.db-subnet: Destroying... [id=db subnet group - testnew][0m[0m
[0m[1mmodule.security.aws_security_group.rds_sg: Destroying... [id=sg-0067b76ba2eab1f16][0m[0m
[0m[1mmodule.instances.aws_db_subnet_group.db-subnet: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_3: Destroying... [id=subnet-0ed054c4ecdc2ae29][0m[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_1: Destroying... [id=subnet-0744cbc0e0a099eb1][0m[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_2: Destroying... [id=subnet-00293d745b25416ec][0m[0m
[0m[1mmodule.security.aws_security_group.rds_sg: Destruction complete after 0s[0m
[0m[1mmodule.security.aws_security_group.ec2_sg: Destroying... [id=sg-0dad9a075161f1c72][0m[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_3: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_2: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_subnet.private_subnet_1: Destruction complete after 0s[0m
[0m[1mmodule.security.aws_security_group.ec2_sg: Destruction complete after 1s[0m
[0m[1mmodule.security.aws_security_group.lb_sg: Destroying... [id=sg-0fea3842e48e1897d][0m[0m
[0m[1mmodule.security.aws_security_group.bastion_sg: Destroying... [id=sg-096365d38e08173e9][0m[0m
[0m[1mmodule.security.aws_security_group.bastion_sg: Destruction complete after 0s[0m
[0m[1mmodule.security.aws_security_group.lb_sg: Destruction complete after 0s[0m
[0m[1mmodule.networking.aws_vpc.main: Destroying... [id=vpc-020ae876256aed30a][0m[0m
[0m[1mmodule.networking.aws_vpc.main: Destruction complete after 1s[0m
[0m[1m[32m
Destroy complete! Resources: 37 destroyed.
[0m